{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4241","webpack:///./src/components/Map.vue?56d3","webpack:///./src/App.vue?bd18","webpack:///./src/components/Scroller.vue?112b","webpack:///./src/components/Map.vue?3f67","webpack:///src/components/Map.vue","webpack:///./src/components/Map.vue?3baf","webpack:///./src/components/Map.vue?9397","webpack:///./src/components/ArrowToggle.vue?2041","webpack:///src/components/ArrowToggle.vue","webpack:///./src/components/ArrowToggle.vue?5799","webpack:///./src/components/ArrowToggle.vue","webpack:///src/components/Scroller.vue","webpack:///./src/components/Scroller.vue?1a24","webpack:///./src/components/Scroller.vue?7a53","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/main.js","webpack:///./src/components/Scroller.vue?6412"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","class","fullScreen","_v","_s","scrollNumber","on","$event","controlsClick","staticRenderFns","ref","style","initialised","nativeOn","handleScrollOuter","screenOffset","actionsHeight","width","height","contentActive","snap","top","toggleContentActive","_m","_l","display","transition","isAnimatingMap","props","offset","Number","actions","Boolean","panzoomInstance","watch","mounted","panzoom","$refs","panmap","moveBy","moveTo","zoom","moveToActiveInitial","moveToActive","moveToInactive","isElementInViewport","component","startY","centreY","endY","down","methods","toggle","startAnimation","update","lerp","components","Map","ArrowToggle","activeScrollPosition","outer","offsetWidth","offsetHeight","console","log","getOffset","$nextTick","scrollTop","$emit","scrollTo","Scroller","Vue","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.a59e97b5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"header\",class:{ 'header-fullscreen': _vm.fullScreen }},[_c('div',{staticClass:\"header-content\"}),_c('p',[_vm._v(_vm._s(_vm.scrollNumber))])]),_c('div',{staticClass:\"map-viewport\"},[_c('div',{staticClass:\"controls\",on:{\"!click\":function($event){return _vm.controlsClick($event)}}},[_c('div'),_c('div'),_c('div')])]),_c('Scroller',{on:{\"scroll\":function($event){_vm.scrollNumber = $event},\"fullscreen\":function($event){_vm.fullScreen = $event}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"outer\",staticClass:\"outer\",style:({ 'scroll-behavior': _vm.initialised ? 'smooth' : 'auto' }),nativeOn:{\"scroll\":function($event){return _vm.handleScrollOuter($event)}}},[_c('Map',{ref:\"map\",attrs:{\"offset\":_vm.screenOffset,\"actions\":_vm.actionsHeight,\"width\":_vm.width,\"height\":_vm.height,\"contentActive\":_vm.contentActive}}),_c('div',{staticClass:\"actions-spacer spacer\",class:{ snap: _vm.initialised },style:({ height: _vm.actionsHeight + 'px', top: _vm.height + 'px' })}),_c('div',{ref:\"content\",staticClass:\"content\",style:({ top: _vm.screenOffset + _vm.actionsHeight + 'px' })},[_c('div',{staticClass:\"content-toggle elevation2-reversed\",on:{\"click\":_vm.toggleContentActive}},[_c('ArrowToggle',{attrs:{\"down\":_vm.contentActive}})],1),_c('div',{ref:\"actions\",staticClass:\"content-actions\"},[_vm._m(0),_c('div',{staticClass:\"directions-action\"})]),_c('div',{staticClass:\"content-inner\"},[_c('div',{staticClass:\"content-group\"},_vm._l((6),function(n){return _c('div',{staticClass:\"content-line\"},[_c('div'),_c('div',[_vm._v(_vm._s(n))]),_c('div',{style:({ height: (2 % n)*50 + 'px', display: 4 % n === 0 ? 'none' : 'flex' })})])}),0)]),_c('div',{staticClass:\"content-footer\"})])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"directions-title\"},[_c('div'),_c('div'),_c('div')])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"map\"},[_c('div',{ref:\"panmap\",staticClass:\"map-tiles\",style:({ transition: _vm.isAnimatingMap ? 'transform 0.3s ease' : 'none' })},[_c('div',{staticClass:\"map-tiles-inner\"},[_c('svg',{attrs:{\"width\":\"2000px\",\"height\":\"2004px\",\"viewBox\":\"0 0 2000 2004\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\"}},[_c('g',{attrs:{\"id\":\"Artboard\",\"stroke\":\"none\",\"stroke-width\":\"1\",\"fill\":\"none\",\"fill-rule\":\"evenodd\"}},[_c('path',{attrs:{\"d\":\"M98.4339828,1969.20563 L140.86039,2011.63203 L98.4339828,2054.05844 L56.007576,2011.63203 L98.4339828,1969.20563 Z M734.830086,1969.20563 L777.256493,2011.63203 L734.830086,2054.05844 L692.403679,2011.63203 L734.830086,1969.20563 Z M734.830086,1863.13961 L777.256493,1905.56602 L628.764069,2054.05844 L586.337662,2011.63203 L734.830086,1863.13961 Z M98.1688178,1862.87445 L140.595225,1905.30085 L-7.8971994,2053.79328 L-50.3236063,2011.36687 L98.1688178,1862.87445 Z M1370.19805,1968.23376 L1412.62446,2010.66017 L1370.19805,2053.08658 L1327.77164,2010.66017 L1370.19805,1968.23376 Z M1370.19805,1862.16775 L1518.69048,2010.66017 L1476.26407,2053.08658 L1327.77164,1904.59415 L1370.19805,1862.16775 Z M1210.59415,1914.70563 L1306.05357,2010.16504 L1263.62716,2052.59145 L1168.16775,1957.13203 L1210.59415,1914.70563 Z M839.363094,1967.73864 L881.789501,2010.16504 L839.363094,2052.59145 L796.936688,2010.16504 L839.363094,1967.73864 Z M787.863094,1916.17262 L830.289501,1958.59903 L787.863094,2001.02543 L745.436688,1958.59903 L787.863094,1916.17262 Z M416.632034,1863.13961 L459.058441,1905.56602 L363.599026,2001.02543 L321.172619,1958.59903 L416.632034,1863.13961 Z M1741.42911,1915.20076 L1783.85552,1957.62716 L1741.42911,2000.05357 L1699.0027,1957.62716 L1741.42911,1915.20076 Z M1317.16504,1915.20076 L1359.59145,1957.62716 L1317.16504,2000.05357 L1274.73864,1957.62716 L1317.16504,1915.20076 Z M1741.16395,1808.86957 L1783.59035,1851.29598 L1635.09793,1999.78841 L1592.67152,1957.362 L1741.16395,1808.86957 Z M892.396103,1914.70563 L934.82251,1957.13203 L892.396103,1999.55844 L849.969696,1957.13203 L892.396103,1914.70563 Z M98.4339828,1757.07359 L246.926407,1905.56602 L204.5,1947.99242 L56.007576,1799.5 L98.4339828,1757.07359 Z M893.929112,1810.1066 L936.355519,1852.53301 L840.896103,1947.99242 L798.469696,1905.56602 L893.929112,1810.1066 Z M310.566017,1863.13961 L352.992424,1905.56602 L310.566017,1947.99242 L268.13961,1905.56602 L310.566017,1863.13961 Z M2059.62716,1809.13474 L2102.05357,1851.56115 L2006.59415,1947.02056 L1964.16775,1904.59415 L2059.62716,1809.13474 Z M1582.33009,1756.10173 L1624.75649,1798.52814 L1476.26407,1947.02056 L1433.83766,1904.59415 L1582.33009,1756.10173 Z M1635.36309,1809.13474 L1677.7895,1851.56115 L1582.33009,1947.02056 L1539.90368,1904.59415 L1635.36309,1809.13474 Z M1051.49513,1755.6066 L1199.98755,1904.09903 L1157.56115,1946.52543 L1009.06872,1798.03301 L1051.49513,1755.6066 Z M522.698052,1651.00758 L565.124458,1693.43398 L363.599026,1894.95942 L321.172619,1852.53301 L522.698052,1651.00758 Z M416.632034,1651.00758 L459.058441,1693.43398 L257.533009,1894.95942 L215.106602,1852.53301 L416.632034,1651.00758 Z M734.830086,1757.07359 L777.256493,1799.5 L681.797077,1894.95942 L639.37067,1852.53301 L734.830086,1757.07359 Z M787.863094,1810.1066 L830.289501,1852.53301 L787.863094,1894.95942 L745.436688,1852.53301 L787.863094,1810.1066 Z M1741.42911,1703.06872 L1889.92154,1851.56115 L1847.49513,1893.98755 L1699.0027,1745.49513 L1741.42911,1703.06872 Z M1317.16504,1809.13474 L1359.59145,1851.56115 L1317.16504,1893.98755 L1274.73864,1851.56115 L1317.16504,1809.13474 Z M1211.09903,1809.13474 L1253.52543,1851.56115 L1211.09903,1893.98755 L1168.67262,1851.56115 L1211.09903,1809.13474 Z M1953.56115,1809.13474 L1995.98755,1851.56115 L1953.56115,1893.98755 L1911.13474,1851.56115 L1953.56115,1809.13474 Z M570.427759,1804.8033 L612.854166,1847.22971 L570.427759,1889.65611 L528.001352,1847.22971 L570.427759,1804.8033 Z M-7.63203436,1757.07359 L34.7943725,1799.5 L-7.63203436,1841.92641 L-50.0584412,1799.5 L-7.63203436,1757.07359 Z M151.466991,1704.04058 L246.926407,1799.5 L204.5,1841.92641 L109.040585,1746.46699 L151.466991,1704.04058 Z M628.764069,1757.07359 L671.190476,1799.5 L628.764069,1841.92641 L586.337662,1799.5 L628.764069,1757.07359 Z M1264.13203,1756.10173 L1306.55844,1798.52814 L1264.13203,1840.95454 L1221.70563,1798.52814 L1264.13203,1756.10173 Z M2059.62716,1597.0027 L2102.05357,1639.42911 L1900.52814,1840.95454 L1858.10173,1798.52814 L2059.62716,1597.0027 Z M1476.26407,1756.10173 L1518.69048,1798.52814 L1476.26407,1840.95454 L1433.83766,1798.52814 L1476.26407,1756.10173 Z M1106.56602,1598.4697 L1148.99242,1640.8961 L1000.5,1789.38853 L958.073593,1746.96212 L1106.56602,1598.4697 Z M-7.63203436,1651.00758 L87.8273811,1746.46699 L45.4009742,1788.8934 L-50.0584412,1693.43398 L-7.63203436,1651.00758 Z M575.73106,1704.04058 L618.157467,1746.46699 L575.73106,1788.8934 L533.304653,1746.46699 L575.73106,1704.04058 Z M1105.29817,1703.33389 L1147.72458,1745.76029 L1105.29817,1788.1867 L1062.87177,1745.76029 L1105.29817,1703.33389 Z M1529.29708,1597.0027 L1571.72348,1639.42911 L1423.23106,1787.92154 L1380.80465,1745.49513 L1529.29708,1597.0027 Z M1794.46212,1650.03571 L1889.92154,1745.49513 L1847.49513,1787.92154 L1752.03571,1692.46212 L1794.46212,1650.03571 Z M1635.36309,1703.06872 L1677.7895,1745.49513 L1635.36309,1787.92154 L1592.93669,1745.49513 L1635.36309,1703.06872 Z M1316.89988,1702.80356 L1359.32628,1745.22996 L1316.89988,1787.65637 L1274.47347,1745.22996 L1316.89988,1702.80356 Z M947.466991,1651.5027 L989.893398,1693.92911 L947.466991,1736.35552 L905.040585,1693.92911 L947.466991,1651.5027 Z M257.533009,1597.97457 L299.959415,1640.40097 L204.5,1735.86039 L162.073593,1693.43398 L257.533009,1597.97457 Z M416.632034,1544.94156 L459.058441,1587.36797 L310.566017,1735.86039 L268.13961,1693.43398 L416.632034,1544.94156 Z M734.830086,1544.94156 L777.256493,1587.36797 L628.764069,1735.86039 L586.337662,1693.43398 L734.830086,1544.94156 Z M204.5,1544.94156 L246.926407,1587.36797 L98.4339828,1735.86039 L56.007576,1693.43398 L204.5,1544.94156 Z M1582.33009,1650.03571 L1624.75649,1692.46212 L1582.33009,1734.88853 L1539.90368,1692.46212 L1582.33009,1650.03571 Z M1264.13203,1650.03571 L1306.55844,1692.46212 L1264.13203,1734.88853 L1221.70563,1692.46212 L1264.13203,1650.03571 Z M1635.36309,1597.0027 L1730.82251,1692.46212 L1688.3961,1734.88853 L1592.93669,1639.42911 L1635.36309,1597.0027 Z M1369.93289,1649.77055 L1412.35929,1692.19696 L1369.93289,1734.62336 L1327.50648,1692.19696 L1369.93289,1649.77055 Z M1000.5,1492.40368 L1042.92641,1534.83009 L894.433983,1683.32251 L852.007576,1640.8961 L1000.5,1492.40368 Z M1053.53301,1545.43669 L1095.95942,1587.86309 L1000.5,1683.32251 L958.073593,1640.8961 L1053.53301,1545.43669 Z M45.4009742,1597.97457 L87.8273811,1640.40097 L45.4009742,1682.82738 L2.97456736,1640.40097 L45.4009742,1597.97457 Z M1317.16504,1597.0027 L1317.43021,1597.26787 L1359.85661,1639.69428 L1317.43021,1682.12068 L1274.73864,1639.42911 L1317.16504,1597.0027 Z M1211.09903,1597.0027 L1253.52543,1639.42911 L1211.09903,1681.85552 L1168.67262,1639.42911 L1211.09903,1597.0027 Z M2059.62716,1490.93669 L2102.05357,1533.36309 L1953.56115,1681.85552 L1911.13474,1639.42911 L2059.62716,1490.93669 Z M1847.49513,1490.93669 L1889.92154,1533.36309 L1741.42911,1681.85552 L1699.0027,1639.42911 L1847.49513,1490.93669 Z M1423.23106,1597.0027 L1465.65747,1639.42911 L1423.23106,1681.85552 L1380.80465,1639.42911 L1423.23106,1597.0027 Z M1900.52814,1543.9697 L1942.95454,1586.3961 L1847.49513,1681.85552 L1805.06872,1639.42911 L1900.52814,1543.9697 Z M310.566017,1544.94156 L352.992424,1587.36797 L310.566017,1629.79437 L268.13961,1587.36797 L310.566017,1544.94156 Z M575.73106,1491.90855 L618.157467,1534.33496 L522.698052,1629.79437 L480.271645,1587.36797 L575.73106,1491.90855 Z M98.4339828,1438.87554 L140.86039,1481.30195 L-7.63203436,1629.79437 L-50.0584412,1587.36797 L98.4339828,1438.87554 Z M151.466991,1491.90855 L193.893398,1534.33496 L98.4339828,1629.79437 L56.007576,1587.36797 L151.466991,1491.90855 Z M1370.46322,1544.23486 L1412.88962,1586.66127 L1370.46322,1629.08767 L1328.03681,1586.66127 L1370.46322,1544.23486 Z M1264.13203,1543.9697 L1306.55844,1586.3961 L1264.13203,1628.82251 L1221.70563,1586.3961 L1264.13203,1543.9697 Z M1476.26407,1437.90368 L1624.75649,1586.3961 L1582.33009,1628.82251 L1433.83766,1480.33009 L1476.26407,1437.90368 Z M1688.3961,1543.9697 L1730.82251,1586.3961 L1688.3961,1628.82251 L1645.9697,1586.3961 L1688.3961,1543.9697 Z M947.466991,1333.30465 L989.893398,1375.73106 L788.367966,1577.25649 L745.941559,1534.83009 L947.466991,1333.30465 Z M947.466991,1439.37067 L989.893398,1481.79708 L894.433983,1577.25649 L852.007576,1534.83009 L947.466991,1439.37067 Z M416.632034,1438.87554 L459.058441,1481.30195 L363.599026,1576.76136 L321.172619,1534.33496 L416.632034,1438.87554 Z M469.665043,1491.90855 L512.09145,1534.33496 L469.665043,1576.76136 L427.238636,1534.33496 L469.665043,1491.90855 Z M1317.43021,1491.20185 L1359.85661,1533.62826 L1317.43021,1576.05467 L1275.0038,1533.62826 L1317.43021,1491.20185 Z M1794.46212,1437.90368 L1836.88853,1480.33009 L1741.42911,1575.7895 L1699.0027,1533.36309 L1794.46212,1437.90368 Z M1953.56115,1490.93669 L1995.98755,1533.36309 L1953.56115,1575.7895 L1911.13474,1533.36309 L1953.56115,1490.93669 Z M1741.42911,1384.87067 L1783.85552,1427.29708 L1635.36309,1575.7895 L1592.93669,1533.36309 L1741.42911,1384.87067 Z M1371.73106,1333.30465 L1414.15747,1375.73106 L1265.66504,1524.22348 L1223.23864,1481.79708 L1371.73106,1333.30465 Z M1212.63203,1386.33766 L1255.05844,1428.76407 L1159.59903,1524.22348 L1117.17262,1481.79708 L1212.63203,1386.33766 Z M1159.59903,1333.30465 L1202.02543,1375.73106 L1053.53301,1524.22348 L1011.1066,1481.79708 L1159.59903,1333.30465 Z M576.235931,1280.27164 L777.761364,1481.79708 L735.334957,1524.22348 L533.809524,1322.69805 L576.235931,1280.27164 Z M45.4009742,1385.84253 L87.8273811,1428.26894 L-7.63203436,1523.72836 L-50.0584412,1481.30195 L45.4009742,1385.84253 Z M310.566017,1438.87554 L352.992424,1481.30195 L310.566017,1523.72836 L268.13961,1481.30195 L310.566017,1438.87554 Z M2059.62716,1384.87067 L2102.05357,1427.29708 L2006.59415,1522.75649 L1964.16775,1480.33009 L2059.62716,1384.87067 Z M1582.33009,1437.90368 L1624.75649,1480.33009 L1582.33009,1522.75649 L1539.90368,1480.33009 L1582.33009,1437.90368 Z M947.466991,1227.23864 L989.893398,1269.66504 L788.367966,1471.19048 L745.941559,1428.76407 L947.466991,1227.23864 Z M257.533009,1279.77652 L299.959415,1322.20292 L151.466991,1470.69535 L109.040585,1428.26894 L257.533009,1279.77652 Z M310.566017,1332.80952 L352.992424,1375.23593 L257.533009,1470.69535 L215.106602,1428.26894 L310.566017,1332.80952 Z M575.73106,1385.84253 L618.157467,1428.26894 L575.73106,1470.69535 L533.304653,1428.26894 L575.73106,1385.84253 Z M1423.23106,1384.87067 L1465.65747,1427.29708 L1423.23106,1469.72348 L1380.80465,1427.29708 L1423.23106,1384.87067 Z M1688.3961,1225.77164 L1730.82251,1268.19805 L1529.29708,1469.72348 L1486.87067,1427.29708 L1688.3961,1225.77164 Z M1953.56115,1384.87067 L1995.98755,1427.29708 L1953.56115,1469.72348 L1911.13474,1427.29708 L1953.56115,1384.87067 Z M1688.3961,1331.83766 L1730.82251,1374.26407 L1635.36309,1469.72348 L1592.93669,1427.29708 L1688.3961,1331.83766 Z M474.968344,1274.47321 L517.394751,1316.89962 L368.902327,1465.39205 L326.47592,1422.96564 L474.968344,1274.47321 Z M682.301948,1280.27164 L777.761364,1375.73106 L735.334957,1418.15747 L639.875542,1322.69805 L682.301948,1280.27164 Z M1953.56115,1278.80465 L1995.98755,1321.23106 L1900.52814,1416.69048 L1858.10173,1374.26407 L1953.56115,1278.80465 Z M1900.52814,1225.77164 L1942.95454,1268.19805 L1794.46212,1416.69048 L1752.03571,1374.26407 L1900.52814,1225.77164 Z M1476.26407,1331.83766 L1518.69048,1374.26407 L1476.26407,1416.69048 L1433.83766,1374.26407 L1476.26407,1331.83766 Z M1058.83631,1328.00135 L1101.26272,1370.42776 L1058.83631,1412.85417 L1016.4099,1370.42776 L1058.83631,1328.00135 Z M1106.56602,1174.20563 L1148.99242,1216.63203 L1000.5,1365.12446 L958.073593,1322.69805 L1106.56602,1174.20563 Z M1265.66504,1121.17262 L1308.09145,1163.59903 L1106.56602,1365.12446 L1064.13961,1322.69805 L1265.66504,1121.17262 Z M1212.63203,1280.27164 L1255.05844,1322.69805 L1212.63203,1365.12446 L1170.20563,1322.69805 L1212.63203,1280.27164 Z M310.566017,1226.74351 L406.025433,1322.20292 L363.599026,1364.62933 L268.13961,1269.16991 L310.566017,1226.74351 Z M151.466991,1279.77652 L193.893398,1322.20292 L151.466991,1364.62933 L109.040585,1322.20292 L151.466991,1279.77652 Z M1371.73106,1227.23864 L1414.15747,1269.66504 L1371.73106,1312.09145 L1329.30465,1269.66504 L1371.73106,1227.23864 Z M1477.79708,1227.23864 L1520.22348,1269.66504 L1477.79708,1312.09145 L1435.37067,1269.66504 L1477.79708,1227.23864 Z M523.202923,1121.17262 L671.695347,1269.66504 L629.26894,1312.09145 L480.776516,1163.59903 L523.202923,1121.17262 Z M523.202923,1227.23864 L565.62933,1269.66504 L523.202923,1312.09145 L480.776516,1269.66504 L523.202923,1227.23864 Z M1424.76407,1068.13961 L1467.19048,1110.56602 L1265.66504,1312.09145 L1223.23864,1269.66504 L1424.76407,1068.13961 Z M363.599026,1173.7105 L459.058441,1269.16991 L416.632034,1311.59632 L321.172619,1216.13691 L363.599026,1173.7105 Z M-7.63203436,1226.74351 L34.7943725,1269.16991 L-7.63203436,1311.59632 L-50.0584412,1269.16991 L-7.63203436,1226.74351 Z M1953.56115,1172.73864 L2049.02056,1268.19805 L2006.59415,1310.62446 L1911.13474,1215.16504 L1953.56115,1172.73864 Z M1794.46212,1225.77164 L1836.88853,1268.19805 L1794.46212,1310.62446 L1752.03571,1268.19805 L1794.46212,1225.77164 Z M1530.83009,1174.20563 L1573.25649,1216.63203 L1530.83009,1259.05844 L1488.40368,1216.63203 L1530.83009,1174.20563 Z M894.433983,1174.20563 L936.86039,1216.63203 L894.433983,1259.05844 L852.007576,1216.63203 L894.433983,1174.20563 Z M470.169914,1174.20563 L512.596321,1216.63203 L470.169914,1259.05844 L427.743507,1216.63203 L470.169914,1174.20563 Z M1530.83009,1068.13961 L1573.25649,1110.56602 L1424.76407,1259.05844 L1382.33766,1216.63203 L1530.83009,1068.13961 Z M894.168818,1067.87445 L936.595225,1110.30085 L788.102801,1258.79328 L745.676394,1216.36687 L894.168818,1067.87445 Z M45.4009742,1173.7105 L87.8273811,1216.13691 L45.4009742,1258.56331 L2.97456736,1216.13691 L45.4009742,1173.7105 Z M2006.59415,1119.70563 L2102.05357,1215.16504 L2059.62716,1257.59145 L1964.16775,1162.13203 L2006.59415,1119.70563 Z M1635.36309,1172.73864 L1677.7895,1215.16504 L1635.36309,1257.59145 L1592.93669,1215.16504 L1635.36309,1172.73864 Z M1212.63203,1068.13961 L1255.05844,1110.56602 L1159.59903,1206.02543 L1117.17262,1163.59903 L1212.63203,1068.13961 Z M735.334957,1015.1066 L777.761364,1057.53301 L629.26894,1206.02543 L586.842533,1163.59903 L735.334957,1015.1066 Z M788.367966,1068.13961 L830.794373,1110.56602 L735.334957,1206.02543 L692.90855,1163.59903 L788.367966,1068.13961 Z M1583.86309,1121.17262 L1626.2895,1163.59903 L1583.86309,1206.02543 L1541.43669,1163.59903 L1583.86309,1121.17262 Z M204.5,1014.61147 L352.992424,1163.1039 L310.566017,1205.5303 L162.073593,1057.03788 L204.5,1014.61147 Z M1688.3961,1119.70563 L1730.82251,1162.13203 L1688.3961,1204.55844 L1645.9697,1162.13203 L1688.3961,1119.70563 Z M364.103897,1068.13961 L406.530304,1110.56602 L364.103897,1152.99242 L321.67749,1110.56602 L364.103897,1068.13961 Z M1689.92911,1015.1066 L1732.35552,1057.53301 L1636.8961,1152.99242 L1594.4697,1110.56602 L1689.92911,1015.1066 Z M1106.56602,1068.13961 L1148.99242,1110.56602 L1106.56602,1152.99242 L1064.13961,1110.56602 L1106.56602,1068.13961 Z M470.169914,1068.13961 L512.596321,1110.56602 L470.169914,1152.99242 L427.743507,1110.56602 L470.169914,1068.13961 Z M894.433983,962.073593 L1042.92641,1110.56602 L1000.5,1152.99242 L852.007576,1004.5 L894.433983,962.073593 Z M1847.49513,960.606602 L1995.98755,1109.09903 L1953.56115,1151.52543 L1805.06872,1003.03301 L1847.49513,960.606602 Z M2001.09903,1018.13474 L2043.52543,1060.56115 L2001.09903,1102.98755 L1958.67262,1060.56115 L2001.09903,1018.13474 Z M629.26894,1015.1066 L671.695347,1057.53301 L629.26894,1099.95942 L586.842533,1057.53301 L629.26894,1015.1066 Z M1212.63203,856.007576 L1255.05844,898.433983 L1053.53301,1099.95942 L1011.1066,1057.53301 L1212.63203,856.007576 Z M1583.86309,1015.1066 L1626.2895,1057.53301 L1583.86309,1099.95942 L1541.43669,1057.53301 L1583.86309,1015.1066 Z M417.136906,1015.1066 L459.563312,1057.53301 L417.136906,1099.95942 L374.710499,1057.53301 L417.136906,1015.1066 Z M1530.83009,962.073593 L1573.25649,1004.5 L1477.79708,1099.95942 L1435.37067,1057.53301 L1530.83009,962.073593 Z M1318.69805,856.007576 L1361.12446,898.433983 L1159.59903,1099.95942 L1117.17262,1057.53301 L1318.69805,856.007576 Z M1366.42776,1009.8033 L1408.85417,1052.22971 L1366.42776,1094.65611 L1324.00135,1052.22971 L1366.42776,1009.8033 Z M2054.13203,965.101731 L2096.55844,1007.52814 L2054.13203,1049.95454 L2011.70563,1007.52814 L2054.13203,965.101731 Z M258.303045,962.338758 L300.729452,1004.76517 L258.303045,1047.19157 L215.876638,1004.76517 L258.303045,962.338758 Z M1424.76407,962.073593 L1467.19048,1004.5 L1424.76407,1046.92641 L1382.33766,1004.5 L1424.76407,962.073593 Z M947.466991,909.040585 L1042.92641,1004.5 L1000.5,1046.92641 L905.040585,951.466991 L947.466991,909.040585 Z M682.301948,856.007576 L724.728355,898.433983 L576.235931,1046.92641 L533.809524,1004.5 L682.301948,856.007576 Z M788.367966,962.073593 L830.794373,1004.5 L788.367966,1046.92641 L745.941559,1004.5 L788.367966,962.073593 Z M469.904749,961.808428 L512.331156,1004.23483 L469.904749,1046.66124 L427.478342,1004.23483 L469.904749,961.808428 Z M1896.56602,807.469696 L1938.99242,849.896103 L1790.5,998.388527 L1748.07359,955.96212 L1896.56602,807.469696 Z M1895.29817,912.333887 L1937.72458,954.760294 L1895.29817,997.186701 L1852.87177,954.760294 L1895.29817,912.333887 Z M735.334957,909.040585 L777.761364,951.466991 L735.334957,993.893398 L692.90855,951.466991 L735.334957,909.040585 Z M788.367966,856.007576 L883.827381,951.466991 L841.400974,993.893398 L745.941559,898.433983 L788.367966,856.007576 Z M417.136906,909.040585 L459.563312,951.466991 L417.136906,993.893398 L374.710499,951.466991 L417.136906,909.040585 Z M1371.73106,909.040585 L1414.15747,951.466991 L1371.73106,993.893398 L1329.30465,951.466991 L1371.73106,909.040585 Z M522.937758,908.775419 L565.364165,951.201826 L522.937758,993.628233 L480.511351,951.201826 L522.937758,908.775419 Z M311.561146,801.464825 L353.987553,843.891232 L205.495129,992.383656 L163.068722,949.957249 L311.561146,801.464825 Z M1737.46699,860.502705 L1779.8934,902.929112 L1737.46699,945.355519 L1695.04058,902.929112 L1737.46699,860.502705 Z M2054.13203,859.035713 L2096.55844,901.46212 L2054.13203,943.888527 L2011.70563,901.46212 L2054.13203,859.035713 Z M470.169914,856.007576 L512.861486,898.699148 L470.435079,941.125555 L427.743507,898.433983 L470.169914,856.007576 Z M1053.53301,802.974567 L1095.95942,845.400974 L1000.5,940.86039 L958.073593,898.433983 L1053.53301,802.974567 Z M364.103897,856.007576 L406.530304,898.433983 L364.103897,940.86039 L321.67749,898.433983 L364.103897,856.007576 Z M1530.83009,749.941559 L1573.25649,792.367966 L1424.76407,940.86039 L1382.33766,898.433983 L1530.83009,749.941559 Z M576.235931,856.007576 L618.662338,898.433983 L576.235931,940.86039 L533.809524,898.433983 L576.235931,856.007576 Z M1000.5,749.941559 L1042.92641,792.367966 L894.433983,940.86039 L852.007576,898.433983 L1000.5,749.941559 Z M1212.63203,749.941559 L1255.05844,792.367966 L1106.56602,940.86039 L1064.13961,898.433983 L1212.63203,749.941559 Z M152.46212,854.497834 L194.888527,896.92424 L152.46212,939.350647 L110.035713,896.92424 L152.46212,854.497834 Z M1843.53301,754.436688 L1885.95942,796.863094 L1790.5,892.32251 L1748.07359,849.896103 L1843.53301,754.436688 Z M1790.5,701.403679 L1832.92641,743.830086 L1684.43398,892.32251 L1642.00758,849.896103 L1790.5,701.403679 Z M2001.09903,806.002705 L2043.52543,848.429112 L2001.09903,890.855519 L1958.67262,848.429112 L2001.09903,806.002705 Z M523.468088,803.239732 L565.894495,845.666139 L523.468088,888.092546 L481.041681,845.666139 L523.468088,803.239732 Z M629.26894,696.90855 L777.761364,845.400974 L735.334957,887.827381 L586.842533,739.334957 L629.26894,696.90855 Z M417.136906,802.974567 L459.563312,845.400974 L417.136906,887.827381 L374.710499,845.400974 L417.136906,802.974567 Z M841.400974,802.974567 L883.827381,845.400974 L841.400974,887.827381 L798.974567,845.400974 L841.400974,802.974567 Z M205.495129,695.398808 L247.921536,737.825215 L99.4291117,886.317639 L57.0027048,843.891232 L205.495129,695.398808 Z M258.528137,748.431816 L300.954544,790.858223 L205.495129,886.317639 L163.068722,843.891232 L258.528137,748.431816 Z M2054.13203,752.969696 L2096.55844,795.396103 L2054.13203,837.82251 L2011.70563,795.396103 L2054.13203,752.969696 Z M470.435079,750.206724 L512.861486,792.633131 L470.435079,835.059538 L428.008672,792.633131 L470.435079,750.206724 Z M1106.56602,749.941559 L1148.99242,792.367966 L1106.56602,834.794373 L1064.13961,792.367966 L1106.56602,749.941559 Z M894.433983,643.875542 L936.86039,686.301948 L788.367966,834.794373 L745.941559,792.367966 L894.433983,643.875542 Z M947.466991,696.90855 L989.893398,739.334957 L894.433983,834.794373 L852.007576,792.367966 L947.466991,696.90855 Z M1371.73106,696.90855 L1414.15747,739.334957 L1318.69805,834.794373 L1276.27164,792.367966 L1371.73106,696.90855 Z M1737.46699,648.37067 L1779.8934,690.797077 L1684.43398,786.256493 L1642.00758,743.830086 L1737.46699,648.37067 Z M1737.46699,542.304653 L1779.8934,584.73106 L1578.36797,786.256493 L1535.94156,743.830086 L1737.46699,542.304653 Z M1265.66504,696.90855 L1308.09145,739.334957 L1265.66504,781.761364 L1223.23864,739.334957 L1265.66504,696.90855 Z M1212.63203,643.875542 L1255.05844,686.301948 L1159.59903,781.761364 L1117.17262,739.334957 L1212.63203,643.875542 Z M735.334957,696.90855 L777.761364,739.334957 L735.334957,781.761364 L692.90855,739.334957 L735.334957,696.90855 Z M152.46212,536.299782 L194.888527,578.726189 L-6.63690552,780.251622 L-49.0633124,737.825215 L152.46212,536.299782 Z M152.46212,642.365799 L194.888527,684.792206 L99.4291117,780.251622 L57.0027048,737.825215 L152.46212,642.365799 Z M2002.63203,595.337662 L2045.05844,637.764069 L1949.59903,733.223484 L1907.17262,690.797077 L2002.63203,595.337662 Z M1949.59903,542.304653 L1992.02543,584.73106 L1843.53301,733.223484 L1801.1066,690.797077 L1949.59903,542.304653 Z M1366.23593,489.271645 L1567.76136,690.797077 L1525.33496,733.223484 L1323.80952,531.698052 L1366.23593,489.271645 Z M576.235931,643.875542 L618.662338,686.301948 L576.235931,728.728355 L533.809524,686.301948 L576.235931,643.875542 Z M841.400974,590.842533 L883.827381,633.26894 L788.367966,728.728355 L745.941559,686.301948 L841.400974,590.842533 Z M841.400974,484.776516 L883.827381,527.202923 L682.301948,728.728355 L639.875542,686.301948 L841.400974,484.776516 Z M1106.56602,643.875542 L1148.99242,686.301948 L1106.56602,728.728355 L1064.13961,686.301948 L1106.56602,643.875542 Z M576.726189,536.299782 L619.152596,578.726189 L470.660172,727.218613 L428.233765,684.792206 L576.726189,536.299782 Z M364.594155,536.299782 L407.020561,578.726189 L258.528137,727.218613 L216.101731,684.792206 L364.594155,536.299782 Z M417.627163,589.332791 L460.05357,631.759198 L364.594155,727.218613 L322.167748,684.792206 L417.627163,589.332791 Z M1737.46699,436.238636 L1779.8934,478.665043 L1578.36797,680.190476 L1535.94156,637.764069 L1737.46699,436.238636 Z M1106.56602,537.809524 L1148.99242,580.235931 L1053.53301,675.695347 L1011.1066,633.26894 L1106.56602,537.809524 Z M629.26894,590.842533 L671.695347,633.26894 L629.26894,675.695347 L586.842533,633.26894 L629.26894,590.842533 Z M1371.73106,590.842533 L1414.15747,633.26894 L1371.73106,675.695347 L1329.30465,633.26894 L1371.73106,590.842533 Z M1053.53301,484.776516 L1095.95942,527.202923 L947.466991,675.695347 L905.040585,633.26894 L1053.53301,484.776516 Z M152.46212,430.233765 L194.888527,472.660172 L-6.63690552,674.185604 L-49.0633124,631.759198 L152.46212,430.233765 Z M1270.96834,479.473215 L1313.39475,521.899622 L1164.90233,670.392046 L1122.47592,627.965639 L1270.96834,479.473215 Z M1472.30195,489.271645 L1567.76136,584.73106 L1525.33496,627.157467 L1429.87554,531.698052 L1472.30195,489.271645 Z M1848.83631,537.001352 L1891.26272,579.427759 L1848.83631,621.854166 L1806.4099,579.427759 L1848.83631,537.001352 Z M263.831438,530.996481 L306.257845,573.422888 L263.831438,615.849295 L221.405031,573.422888 L263.831438,530.996481 Z M1896.56602,383.205627 L1938.99242,425.632034 L1790.5,574.124458 L1748.07359,531.698052 L1896.56602,383.205627 Z M2002.63203,489.271645 L2045.05844,531.698052 L2002.63203,574.124458 L1960.20563,531.698052 L2002.63203,489.271645 Z M2055.66504,330.172619 L2098.09145,372.599026 L1896.56602,574.124458 L1854.13961,531.698052 L2055.66504,330.172619 Z M947.466991,484.776516 L989.893398,527.202923 L947.466991,569.62933 L905.040585,527.202923 L947.466991,484.776516 Z M1106.56602,431.743507 L1202.02543,527.202923 L1159.59903,569.62933 L1064.13961,474.169914 L1106.56602,431.743507 Z M417.627163,483.266773 L460.05357,525.69318 L417.627163,568.119587 L375.200756,525.69318 L417.627163,483.266773 Z M470.660172,324.167748 L513.086579,366.594155 L311.561146,568.119587 L269.134739,525.69318 L470.660172,324.167748 Z M311.561146,377.200756 L353.987553,419.627163 L205.495129,568.119587 L163.068722,525.69318 L311.561146,377.200756 Z M1313.20292,436.238636 L1355.62933,478.665043 L1313.20292,521.09145 L1270.77652,478.665043 L1313.20292,436.238636 Z M1313.20292,330.172619 L1461.69535,478.665043 L1419.26894,521.09145 L1270.77652,372.599026 L1313.20292,330.172619 Z M1159.59903,378.710499 L1255.05844,474.169914 L1212.63203,516.596321 L1117.17262,421.136906 L1159.59903,378.710499 Z M788.367966,431.743507 L830.794373,474.169914 L788.367966,516.596321 L745.941559,474.169914 L788.367966,431.743507 Z M576.726189,430.233765 L619.152596,472.660172 L576.726189,515.086579 L534.299782,472.660172 L576.726189,430.233765 Z M682.792206,430.233765 L725.218613,472.660172 L682.792206,515.086579 L640.365799,472.660172 L682.792206,430.233765 Z M629.759198,271.134739 L672.185604,313.561146 L470.660172,515.086579 L428.233765,472.660172 L629.759198,271.134739 Z M1684.43398,383.205627 L1726.86039,425.632034 L1684.43398,468.058441 L1642.00758,425.632034 L1684.43398,383.205627 Z M1260.16991,383.205627 L1302.59632,425.632034 L1260.16991,468.058441 L1217.74351,425.632034 L1260.16991,383.205627 Z M1684.16882,276.874445 L1726.59522,319.300852 L1578.1028,467.793276 L1535.67639,425.366869 L1684.16882,276.874445 Z M841.400974,378.710499 L883.827381,421.136906 L841.400974,463.563312 L798.974567,421.136906 L841.400974,378.710499 Z M735.825215,377.200756 L778.251622,419.627163 L735.825215,462.05357 L693.398808,419.627163 L735.825215,377.200756 Z M735.825215,271.134739 L778.251622,313.561146 L629.759198,462.05357 L587.332791,419.627163 L735.825215,271.134739 Z M99.4291117,377.200756 L141.855519,419.627163 L99.4291117,462.05357 L57.0027048,419.627163 L99.4291117,377.200756 Z M99.1639466,270.869574 L141.590353,313.295981 L-6.90207056,461.788405 L-49.3284774,419.361998 L99.1639466,270.869574 Z M1578.36797,277.13961 L1620.79437,319.566017 L1525.33496,415.025433 L1482.90855,372.599026 L1578.36797,277.13961 Z M2002.63203,277.13961 L2045.05844,319.566017 L1949.59903,415.025433 L1907.17262,372.599026 L2002.63203,277.13961 Z M1525.33496,224.106602 L1567.76136,266.533009 L1419.26894,415.025433 L1376.84253,372.599026 L1525.33496,224.106602 Z M1000.5,219.611473 L1148.99242,368.103897 L1106.56602,410.530304 L958.073593,262.03788 L1000.5,219.611473 Z M788.858223,324.167748 L831.28463,366.594155 L788.858223,409.020561 L746.431816,366.594155 L788.858223,324.167748 Z M417.627163,271.134739 L460.05357,313.561146 L364.594155,409.020561 L322.167748,366.594155 L417.627163,271.134739 Z M1684.43398,171.073593 L1832.92641,319.566017 L1790.5,361.992424 L1642.00758,213.5 L1684.43398,171.073593 Z M1260.16991,277.13961 L1302.59632,319.566017 L1260.16991,361.992424 L1217.74351,319.566017 L1260.16991,277.13961 Z M1154.1039,277.13961 L1196.5303,319.566017 L1154.1039,361.992424 L1111.67749,319.566017 L1154.1039,277.13961 Z M1896.56602,277.13961 L1938.99242,319.566017 L1896.56602,361.992424 L1854.13961,319.566017 L1896.56602,277.13961 Z M99.4291117,165.068722 L247.921536,313.561146 L205.495129,355.987553 L57.0027048,207.495129 L99.4291117,165.068722 Z M894.92424,218.101731 L937.350647,260.528137 L841.891232,355.987553 L799.464825,313.561146 L894.92424,218.101731 Z M311.561146,271.134739 L353.987553,313.561146 L311.561146,355.987553 L269.134739,313.561146 L311.561146,271.134739 Z M1419.26894,224.106602 L1461.69535,266.533009 L1419.26894,308.959415 L1376.84253,266.533009 L1419.26894,224.106602 Z M1207.13691,224.106602 L1249.56331,266.533009 L1207.13691,308.959415 L1164.7105,266.533009 L1207.13691,224.106602 Z M2002.63203,65.007576 L2045.05844,107.433983 L1843.53301,308.959415 L1801.1066,266.533009 L2002.63203,65.007576 Z M788.858223,218.101731 L831.28463,260.528137 L788.858223,302.954544 L746.431816,260.528137 L788.858223,218.101731 Z M417.627163,59.0027048 L460.05357,101.429112 L258.528137,302.954544 L216.101731,260.528137 L417.627163,59.0027048 Z M735.825215,165.068722 L778.251622,207.495129 L682.792206,302.954544 L640.365799,260.528137 L735.825215,165.068722 Z M523.69318,59.0027048 L566.119587,101.429112 L364.594155,302.954544 L322.167748,260.528137 L523.69318,59.0027048 Z M571.422888,212.79843 L613.849295,255.224837 L571.422888,297.651243 L528.996481,255.224837 L571.422888,212.79843 Z M1048.30304,171.338758 L1090.72945,213.765165 L1048.30304,256.191572 L1005.87664,213.765165 L1048.30304,171.338758 Z M1472.30195,65.007576 L1514.72836,107.433983 L1366.23593,255.926407 L1323.80952,213.5 L1472.30195,65.007576 Z M1578.36797,171.073593 L1620.79437,213.5 L1578.36797,255.926407 L1535.94156,213.5 L1578.36797,171.073593 Z M1737.46699,118.040585 L1832.92641,213.5 L1790.5,255.926407 L1695.04058,160.466991 L1737.46699,118.040585 Z M1259.90475,170.808428 L1302.33116,213.234835 L1259.90475,255.661242 L1217.47834,213.234835 L1259.90475,170.808428 Z M-6.63690552,165.068722 L35.7895014,207.495129 L-6.63690552,249.921536 L-49.0633124,207.495129 L-6.63690552,165.068722 Z M152.46212,112.035713 L247.921536,207.495129 L205.495129,249.921536 L110.035713,154.46212 L152.46212,112.035713 Z M629.759198,165.068722 L672.185604,207.495129 L629.759198,249.921536 L587.332791,207.495129 L629.759198,165.068722 Z M1525.33496,118.040585 L1567.76136,160.466991 L1525.33496,202.893398 L1482.90855,160.466991 L1525.33496,118.040585 Z M1578.36797,65.007576 L1673.82738,160.466991 L1631.40097,202.893398 L1535.94156,107.433983 L1578.36797,65.007576 Z M1207.13691,118.040585 L1249.56331,160.466991 L1207.13691,202.893398 L1164.7105,160.466991 L1207.13691,118.040585 Z M1312.93776,117.775419 L1355.36416,160.201826 L1312.93776,202.628233 L1270.51135,160.201826 L1312.93776,117.775419 Z M1101.56115,10.464825 L1143.98755,52.8912319 L995.495129,201.383656 L953.068722,158.957249 L1101.56115,10.464825 Z M-6.63690552,59.0027048 L88.8225099,154.46212 L46.3961031,196.888527 L-49.0633124,101.429112 L-6.63690552,59.0027048 Z M576.726189,112.035713 L619.152596,154.46212 L576.726189,196.888527 L534.299782,154.46212 L576.726189,112.035713 Z M1260.16991,65.007576 L1302.86149,107.699148 L1260.43508,150.125555 L1217.74351,107.433983 L1260.16991,65.007576 Z M1790.5,-41.0584412 L1832.92641,1.36796564 L1684.43398,149.86039 L1642.00758,107.433983 L1790.5,-41.0584412 Z M1366.23593,65.007576 L1408.66234,107.433983 L1366.23593,149.86039 L1323.80952,107.433983 L1366.23593,65.007576 Z M1843.53301,11.9745674 L1885.95942,54.4009742 L1790.5,149.86039 L1748.07359,107.433983 L1843.53301,11.9745674 Z M1154.1039,65.007576 L1196.5303,107.433983 L1154.1039,149.86039 L1111.67749,107.433983 L1154.1039,65.007576 Z M2002.63203,-41.0584412 L2045.05844,1.36796564 L1896.56602,149.86039 L1854.13961,107.433983 L2002.63203,-41.0584412 Z M942.46212,63.4978336 L984.888527,105.92424 L942.46212,148.350647 L900.035713,105.92424 L942.46212,63.4978336 Z M205.495129,-47.0633124 L247.921536,-4.63690552 L99.4291117,143.855519 L57.0027048,101.429112 L205.495129,-47.0633124 Z M258.528137,5.9696962 L300.954544,48.3961031 L205.495129,143.855519 L163.068722,101.429112 L258.528137,5.9696962 Z M735.825215,-47.0633124 L778.251622,-4.63690552 L629.759198,143.855519 L587.332791,101.429112 L735.825215,-47.0633124 Z M417.627163,-47.0633124 L460.05357,-4.63690552 L311.561146,143.855519 L269.134739,101.429112 L417.627163,-47.0633124 Z M1313.46809,12.2397324 L1355.89449,54.6661393 L1313.46809,97.0925461 L1271.04168,54.6661393 L1313.46809,12.2397324 Z M1631.40097,11.9745674 L1673.82738,54.4009742 L1631.40097,96.8273811 L1588.97457,54.4009742 L1631.40097,11.9745674 Z M1207.13691,11.9745674 L1249.56331,54.4009742 L1207.13691,96.8273811 L1164.7105,54.4009742 L1207.13691,11.9745674 Z M1048.52814,-42.5681836 L1090.95454,-0.141776686 L995.495129,95.3176388 L953.068722,52.8912319 L1048.52814,-42.5681836 Z M46.3961031,5.9696962 L88.8225099,48.3961031 L46.3961031,90.8225099 L3.9696962,48.3961031 L46.3961031,5.9696962 Z M1260.43508,-40.7932762 L1302.86149,1.63313069 L1260.43508,44.0595376 L1218.00867,1.63313069 L1260.43508,-40.7932762 Z M1896.56602,-41.0584412 L1938.99242,1.36796564 L1896.56602,43.7943725 L1854.13961,1.36796564 L1896.56602,-41.0584412 Z M311.561146,-47.0633124 L353.987553,-4.63690552 L311.561146,37.7895014 L269.134739,-4.63690552 L311.561146,-47.0633124 Z\",\"id\":\"Combined-Shape\",\"fill\":\"#EDEDED\"}})]),_c('path',{ref:\"oval\",attrs:{\"d\":\"M1000.5,1039 C1009.5,1027.88161 1014,1019.91226 1014,1015.09194 C1014,1007.86146 1007.95584,1002 1000.5,1002 C993.044156,1002 987,1007.86146 987,1015.09194 C987,1019.91226 991.5,1027.88161 1000.5,1039 Z\",\"id\":\"Oval\"}})])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"map\">\n\n    <div \n    class=\"map-tiles\"\n    ref=\"panmap\"\n    v-bind:style=\"{ transition: isAnimatingMap ? 'transform 0.3s ease' : 'none' }\"\n    >\n        <div class=\"map-tiles-inner\">\n            <svg width=\"2000px\" height=\"2004px\" viewBox=\"0 0 2000 2004\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n                <g id=\"Artboard\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                    <path d=\"M98.4339828,1969.20563 L140.86039,2011.63203 L98.4339828,2054.05844 L56.007576,2011.63203 L98.4339828,1969.20563 Z M734.830086,1969.20563 L777.256493,2011.63203 L734.830086,2054.05844 L692.403679,2011.63203 L734.830086,1969.20563 Z M734.830086,1863.13961 L777.256493,1905.56602 L628.764069,2054.05844 L586.337662,2011.63203 L734.830086,1863.13961 Z M98.1688178,1862.87445 L140.595225,1905.30085 L-7.8971994,2053.79328 L-50.3236063,2011.36687 L98.1688178,1862.87445 Z M1370.19805,1968.23376 L1412.62446,2010.66017 L1370.19805,2053.08658 L1327.77164,2010.66017 L1370.19805,1968.23376 Z M1370.19805,1862.16775 L1518.69048,2010.66017 L1476.26407,2053.08658 L1327.77164,1904.59415 L1370.19805,1862.16775 Z M1210.59415,1914.70563 L1306.05357,2010.16504 L1263.62716,2052.59145 L1168.16775,1957.13203 L1210.59415,1914.70563 Z M839.363094,1967.73864 L881.789501,2010.16504 L839.363094,2052.59145 L796.936688,2010.16504 L839.363094,1967.73864 Z M787.863094,1916.17262 L830.289501,1958.59903 L787.863094,2001.02543 L745.436688,1958.59903 L787.863094,1916.17262 Z M416.632034,1863.13961 L459.058441,1905.56602 L363.599026,2001.02543 L321.172619,1958.59903 L416.632034,1863.13961 Z M1741.42911,1915.20076 L1783.85552,1957.62716 L1741.42911,2000.05357 L1699.0027,1957.62716 L1741.42911,1915.20076 Z M1317.16504,1915.20076 L1359.59145,1957.62716 L1317.16504,2000.05357 L1274.73864,1957.62716 L1317.16504,1915.20076 Z M1741.16395,1808.86957 L1783.59035,1851.29598 L1635.09793,1999.78841 L1592.67152,1957.362 L1741.16395,1808.86957 Z M892.396103,1914.70563 L934.82251,1957.13203 L892.396103,1999.55844 L849.969696,1957.13203 L892.396103,1914.70563 Z M98.4339828,1757.07359 L246.926407,1905.56602 L204.5,1947.99242 L56.007576,1799.5 L98.4339828,1757.07359 Z M893.929112,1810.1066 L936.355519,1852.53301 L840.896103,1947.99242 L798.469696,1905.56602 L893.929112,1810.1066 Z M310.566017,1863.13961 L352.992424,1905.56602 L310.566017,1947.99242 L268.13961,1905.56602 L310.566017,1863.13961 Z M2059.62716,1809.13474 L2102.05357,1851.56115 L2006.59415,1947.02056 L1964.16775,1904.59415 L2059.62716,1809.13474 Z M1582.33009,1756.10173 L1624.75649,1798.52814 L1476.26407,1947.02056 L1433.83766,1904.59415 L1582.33009,1756.10173 Z M1635.36309,1809.13474 L1677.7895,1851.56115 L1582.33009,1947.02056 L1539.90368,1904.59415 L1635.36309,1809.13474 Z M1051.49513,1755.6066 L1199.98755,1904.09903 L1157.56115,1946.52543 L1009.06872,1798.03301 L1051.49513,1755.6066 Z M522.698052,1651.00758 L565.124458,1693.43398 L363.599026,1894.95942 L321.172619,1852.53301 L522.698052,1651.00758 Z M416.632034,1651.00758 L459.058441,1693.43398 L257.533009,1894.95942 L215.106602,1852.53301 L416.632034,1651.00758 Z M734.830086,1757.07359 L777.256493,1799.5 L681.797077,1894.95942 L639.37067,1852.53301 L734.830086,1757.07359 Z M787.863094,1810.1066 L830.289501,1852.53301 L787.863094,1894.95942 L745.436688,1852.53301 L787.863094,1810.1066 Z M1741.42911,1703.06872 L1889.92154,1851.56115 L1847.49513,1893.98755 L1699.0027,1745.49513 L1741.42911,1703.06872 Z M1317.16504,1809.13474 L1359.59145,1851.56115 L1317.16504,1893.98755 L1274.73864,1851.56115 L1317.16504,1809.13474 Z M1211.09903,1809.13474 L1253.52543,1851.56115 L1211.09903,1893.98755 L1168.67262,1851.56115 L1211.09903,1809.13474 Z M1953.56115,1809.13474 L1995.98755,1851.56115 L1953.56115,1893.98755 L1911.13474,1851.56115 L1953.56115,1809.13474 Z M570.427759,1804.8033 L612.854166,1847.22971 L570.427759,1889.65611 L528.001352,1847.22971 L570.427759,1804.8033 Z M-7.63203436,1757.07359 L34.7943725,1799.5 L-7.63203436,1841.92641 L-50.0584412,1799.5 L-7.63203436,1757.07359 Z M151.466991,1704.04058 L246.926407,1799.5 L204.5,1841.92641 L109.040585,1746.46699 L151.466991,1704.04058 Z M628.764069,1757.07359 L671.190476,1799.5 L628.764069,1841.92641 L586.337662,1799.5 L628.764069,1757.07359 Z M1264.13203,1756.10173 L1306.55844,1798.52814 L1264.13203,1840.95454 L1221.70563,1798.52814 L1264.13203,1756.10173 Z M2059.62716,1597.0027 L2102.05357,1639.42911 L1900.52814,1840.95454 L1858.10173,1798.52814 L2059.62716,1597.0027 Z M1476.26407,1756.10173 L1518.69048,1798.52814 L1476.26407,1840.95454 L1433.83766,1798.52814 L1476.26407,1756.10173 Z M1106.56602,1598.4697 L1148.99242,1640.8961 L1000.5,1789.38853 L958.073593,1746.96212 L1106.56602,1598.4697 Z M-7.63203436,1651.00758 L87.8273811,1746.46699 L45.4009742,1788.8934 L-50.0584412,1693.43398 L-7.63203436,1651.00758 Z M575.73106,1704.04058 L618.157467,1746.46699 L575.73106,1788.8934 L533.304653,1746.46699 L575.73106,1704.04058 Z M1105.29817,1703.33389 L1147.72458,1745.76029 L1105.29817,1788.1867 L1062.87177,1745.76029 L1105.29817,1703.33389 Z M1529.29708,1597.0027 L1571.72348,1639.42911 L1423.23106,1787.92154 L1380.80465,1745.49513 L1529.29708,1597.0027 Z M1794.46212,1650.03571 L1889.92154,1745.49513 L1847.49513,1787.92154 L1752.03571,1692.46212 L1794.46212,1650.03571 Z M1635.36309,1703.06872 L1677.7895,1745.49513 L1635.36309,1787.92154 L1592.93669,1745.49513 L1635.36309,1703.06872 Z M1316.89988,1702.80356 L1359.32628,1745.22996 L1316.89988,1787.65637 L1274.47347,1745.22996 L1316.89988,1702.80356 Z M947.466991,1651.5027 L989.893398,1693.92911 L947.466991,1736.35552 L905.040585,1693.92911 L947.466991,1651.5027 Z M257.533009,1597.97457 L299.959415,1640.40097 L204.5,1735.86039 L162.073593,1693.43398 L257.533009,1597.97457 Z M416.632034,1544.94156 L459.058441,1587.36797 L310.566017,1735.86039 L268.13961,1693.43398 L416.632034,1544.94156 Z M734.830086,1544.94156 L777.256493,1587.36797 L628.764069,1735.86039 L586.337662,1693.43398 L734.830086,1544.94156 Z M204.5,1544.94156 L246.926407,1587.36797 L98.4339828,1735.86039 L56.007576,1693.43398 L204.5,1544.94156 Z M1582.33009,1650.03571 L1624.75649,1692.46212 L1582.33009,1734.88853 L1539.90368,1692.46212 L1582.33009,1650.03571 Z M1264.13203,1650.03571 L1306.55844,1692.46212 L1264.13203,1734.88853 L1221.70563,1692.46212 L1264.13203,1650.03571 Z M1635.36309,1597.0027 L1730.82251,1692.46212 L1688.3961,1734.88853 L1592.93669,1639.42911 L1635.36309,1597.0027 Z M1369.93289,1649.77055 L1412.35929,1692.19696 L1369.93289,1734.62336 L1327.50648,1692.19696 L1369.93289,1649.77055 Z M1000.5,1492.40368 L1042.92641,1534.83009 L894.433983,1683.32251 L852.007576,1640.8961 L1000.5,1492.40368 Z M1053.53301,1545.43669 L1095.95942,1587.86309 L1000.5,1683.32251 L958.073593,1640.8961 L1053.53301,1545.43669 Z M45.4009742,1597.97457 L87.8273811,1640.40097 L45.4009742,1682.82738 L2.97456736,1640.40097 L45.4009742,1597.97457 Z M1317.16504,1597.0027 L1317.43021,1597.26787 L1359.85661,1639.69428 L1317.43021,1682.12068 L1274.73864,1639.42911 L1317.16504,1597.0027 Z M1211.09903,1597.0027 L1253.52543,1639.42911 L1211.09903,1681.85552 L1168.67262,1639.42911 L1211.09903,1597.0027 Z M2059.62716,1490.93669 L2102.05357,1533.36309 L1953.56115,1681.85552 L1911.13474,1639.42911 L2059.62716,1490.93669 Z M1847.49513,1490.93669 L1889.92154,1533.36309 L1741.42911,1681.85552 L1699.0027,1639.42911 L1847.49513,1490.93669 Z M1423.23106,1597.0027 L1465.65747,1639.42911 L1423.23106,1681.85552 L1380.80465,1639.42911 L1423.23106,1597.0027 Z M1900.52814,1543.9697 L1942.95454,1586.3961 L1847.49513,1681.85552 L1805.06872,1639.42911 L1900.52814,1543.9697 Z M310.566017,1544.94156 L352.992424,1587.36797 L310.566017,1629.79437 L268.13961,1587.36797 L310.566017,1544.94156 Z M575.73106,1491.90855 L618.157467,1534.33496 L522.698052,1629.79437 L480.271645,1587.36797 L575.73106,1491.90855 Z M98.4339828,1438.87554 L140.86039,1481.30195 L-7.63203436,1629.79437 L-50.0584412,1587.36797 L98.4339828,1438.87554 Z M151.466991,1491.90855 L193.893398,1534.33496 L98.4339828,1629.79437 L56.007576,1587.36797 L151.466991,1491.90855 Z M1370.46322,1544.23486 L1412.88962,1586.66127 L1370.46322,1629.08767 L1328.03681,1586.66127 L1370.46322,1544.23486 Z M1264.13203,1543.9697 L1306.55844,1586.3961 L1264.13203,1628.82251 L1221.70563,1586.3961 L1264.13203,1543.9697 Z M1476.26407,1437.90368 L1624.75649,1586.3961 L1582.33009,1628.82251 L1433.83766,1480.33009 L1476.26407,1437.90368 Z M1688.3961,1543.9697 L1730.82251,1586.3961 L1688.3961,1628.82251 L1645.9697,1586.3961 L1688.3961,1543.9697 Z M947.466991,1333.30465 L989.893398,1375.73106 L788.367966,1577.25649 L745.941559,1534.83009 L947.466991,1333.30465 Z M947.466991,1439.37067 L989.893398,1481.79708 L894.433983,1577.25649 L852.007576,1534.83009 L947.466991,1439.37067 Z M416.632034,1438.87554 L459.058441,1481.30195 L363.599026,1576.76136 L321.172619,1534.33496 L416.632034,1438.87554 Z M469.665043,1491.90855 L512.09145,1534.33496 L469.665043,1576.76136 L427.238636,1534.33496 L469.665043,1491.90855 Z M1317.43021,1491.20185 L1359.85661,1533.62826 L1317.43021,1576.05467 L1275.0038,1533.62826 L1317.43021,1491.20185 Z M1794.46212,1437.90368 L1836.88853,1480.33009 L1741.42911,1575.7895 L1699.0027,1533.36309 L1794.46212,1437.90368 Z M1953.56115,1490.93669 L1995.98755,1533.36309 L1953.56115,1575.7895 L1911.13474,1533.36309 L1953.56115,1490.93669 Z M1741.42911,1384.87067 L1783.85552,1427.29708 L1635.36309,1575.7895 L1592.93669,1533.36309 L1741.42911,1384.87067 Z M1371.73106,1333.30465 L1414.15747,1375.73106 L1265.66504,1524.22348 L1223.23864,1481.79708 L1371.73106,1333.30465 Z M1212.63203,1386.33766 L1255.05844,1428.76407 L1159.59903,1524.22348 L1117.17262,1481.79708 L1212.63203,1386.33766 Z M1159.59903,1333.30465 L1202.02543,1375.73106 L1053.53301,1524.22348 L1011.1066,1481.79708 L1159.59903,1333.30465 Z M576.235931,1280.27164 L777.761364,1481.79708 L735.334957,1524.22348 L533.809524,1322.69805 L576.235931,1280.27164 Z M45.4009742,1385.84253 L87.8273811,1428.26894 L-7.63203436,1523.72836 L-50.0584412,1481.30195 L45.4009742,1385.84253 Z M310.566017,1438.87554 L352.992424,1481.30195 L310.566017,1523.72836 L268.13961,1481.30195 L310.566017,1438.87554 Z M2059.62716,1384.87067 L2102.05357,1427.29708 L2006.59415,1522.75649 L1964.16775,1480.33009 L2059.62716,1384.87067 Z M1582.33009,1437.90368 L1624.75649,1480.33009 L1582.33009,1522.75649 L1539.90368,1480.33009 L1582.33009,1437.90368 Z M947.466991,1227.23864 L989.893398,1269.66504 L788.367966,1471.19048 L745.941559,1428.76407 L947.466991,1227.23864 Z M257.533009,1279.77652 L299.959415,1322.20292 L151.466991,1470.69535 L109.040585,1428.26894 L257.533009,1279.77652 Z M310.566017,1332.80952 L352.992424,1375.23593 L257.533009,1470.69535 L215.106602,1428.26894 L310.566017,1332.80952 Z M575.73106,1385.84253 L618.157467,1428.26894 L575.73106,1470.69535 L533.304653,1428.26894 L575.73106,1385.84253 Z M1423.23106,1384.87067 L1465.65747,1427.29708 L1423.23106,1469.72348 L1380.80465,1427.29708 L1423.23106,1384.87067 Z M1688.3961,1225.77164 L1730.82251,1268.19805 L1529.29708,1469.72348 L1486.87067,1427.29708 L1688.3961,1225.77164 Z M1953.56115,1384.87067 L1995.98755,1427.29708 L1953.56115,1469.72348 L1911.13474,1427.29708 L1953.56115,1384.87067 Z M1688.3961,1331.83766 L1730.82251,1374.26407 L1635.36309,1469.72348 L1592.93669,1427.29708 L1688.3961,1331.83766 Z M474.968344,1274.47321 L517.394751,1316.89962 L368.902327,1465.39205 L326.47592,1422.96564 L474.968344,1274.47321 Z M682.301948,1280.27164 L777.761364,1375.73106 L735.334957,1418.15747 L639.875542,1322.69805 L682.301948,1280.27164 Z M1953.56115,1278.80465 L1995.98755,1321.23106 L1900.52814,1416.69048 L1858.10173,1374.26407 L1953.56115,1278.80465 Z M1900.52814,1225.77164 L1942.95454,1268.19805 L1794.46212,1416.69048 L1752.03571,1374.26407 L1900.52814,1225.77164 Z M1476.26407,1331.83766 L1518.69048,1374.26407 L1476.26407,1416.69048 L1433.83766,1374.26407 L1476.26407,1331.83766 Z M1058.83631,1328.00135 L1101.26272,1370.42776 L1058.83631,1412.85417 L1016.4099,1370.42776 L1058.83631,1328.00135 Z M1106.56602,1174.20563 L1148.99242,1216.63203 L1000.5,1365.12446 L958.073593,1322.69805 L1106.56602,1174.20563 Z M1265.66504,1121.17262 L1308.09145,1163.59903 L1106.56602,1365.12446 L1064.13961,1322.69805 L1265.66504,1121.17262 Z M1212.63203,1280.27164 L1255.05844,1322.69805 L1212.63203,1365.12446 L1170.20563,1322.69805 L1212.63203,1280.27164 Z M310.566017,1226.74351 L406.025433,1322.20292 L363.599026,1364.62933 L268.13961,1269.16991 L310.566017,1226.74351 Z M151.466991,1279.77652 L193.893398,1322.20292 L151.466991,1364.62933 L109.040585,1322.20292 L151.466991,1279.77652 Z M1371.73106,1227.23864 L1414.15747,1269.66504 L1371.73106,1312.09145 L1329.30465,1269.66504 L1371.73106,1227.23864 Z M1477.79708,1227.23864 L1520.22348,1269.66504 L1477.79708,1312.09145 L1435.37067,1269.66504 L1477.79708,1227.23864 Z M523.202923,1121.17262 L671.695347,1269.66504 L629.26894,1312.09145 L480.776516,1163.59903 L523.202923,1121.17262 Z M523.202923,1227.23864 L565.62933,1269.66504 L523.202923,1312.09145 L480.776516,1269.66504 L523.202923,1227.23864 Z M1424.76407,1068.13961 L1467.19048,1110.56602 L1265.66504,1312.09145 L1223.23864,1269.66504 L1424.76407,1068.13961 Z M363.599026,1173.7105 L459.058441,1269.16991 L416.632034,1311.59632 L321.172619,1216.13691 L363.599026,1173.7105 Z M-7.63203436,1226.74351 L34.7943725,1269.16991 L-7.63203436,1311.59632 L-50.0584412,1269.16991 L-7.63203436,1226.74351 Z M1953.56115,1172.73864 L2049.02056,1268.19805 L2006.59415,1310.62446 L1911.13474,1215.16504 L1953.56115,1172.73864 Z M1794.46212,1225.77164 L1836.88853,1268.19805 L1794.46212,1310.62446 L1752.03571,1268.19805 L1794.46212,1225.77164 Z M1530.83009,1174.20563 L1573.25649,1216.63203 L1530.83009,1259.05844 L1488.40368,1216.63203 L1530.83009,1174.20563 Z M894.433983,1174.20563 L936.86039,1216.63203 L894.433983,1259.05844 L852.007576,1216.63203 L894.433983,1174.20563 Z M470.169914,1174.20563 L512.596321,1216.63203 L470.169914,1259.05844 L427.743507,1216.63203 L470.169914,1174.20563 Z M1530.83009,1068.13961 L1573.25649,1110.56602 L1424.76407,1259.05844 L1382.33766,1216.63203 L1530.83009,1068.13961 Z M894.168818,1067.87445 L936.595225,1110.30085 L788.102801,1258.79328 L745.676394,1216.36687 L894.168818,1067.87445 Z M45.4009742,1173.7105 L87.8273811,1216.13691 L45.4009742,1258.56331 L2.97456736,1216.13691 L45.4009742,1173.7105 Z M2006.59415,1119.70563 L2102.05357,1215.16504 L2059.62716,1257.59145 L1964.16775,1162.13203 L2006.59415,1119.70563 Z M1635.36309,1172.73864 L1677.7895,1215.16504 L1635.36309,1257.59145 L1592.93669,1215.16504 L1635.36309,1172.73864 Z M1212.63203,1068.13961 L1255.05844,1110.56602 L1159.59903,1206.02543 L1117.17262,1163.59903 L1212.63203,1068.13961 Z M735.334957,1015.1066 L777.761364,1057.53301 L629.26894,1206.02543 L586.842533,1163.59903 L735.334957,1015.1066 Z M788.367966,1068.13961 L830.794373,1110.56602 L735.334957,1206.02543 L692.90855,1163.59903 L788.367966,1068.13961 Z M1583.86309,1121.17262 L1626.2895,1163.59903 L1583.86309,1206.02543 L1541.43669,1163.59903 L1583.86309,1121.17262 Z M204.5,1014.61147 L352.992424,1163.1039 L310.566017,1205.5303 L162.073593,1057.03788 L204.5,1014.61147 Z M1688.3961,1119.70563 L1730.82251,1162.13203 L1688.3961,1204.55844 L1645.9697,1162.13203 L1688.3961,1119.70563 Z M364.103897,1068.13961 L406.530304,1110.56602 L364.103897,1152.99242 L321.67749,1110.56602 L364.103897,1068.13961 Z M1689.92911,1015.1066 L1732.35552,1057.53301 L1636.8961,1152.99242 L1594.4697,1110.56602 L1689.92911,1015.1066 Z M1106.56602,1068.13961 L1148.99242,1110.56602 L1106.56602,1152.99242 L1064.13961,1110.56602 L1106.56602,1068.13961 Z M470.169914,1068.13961 L512.596321,1110.56602 L470.169914,1152.99242 L427.743507,1110.56602 L470.169914,1068.13961 Z M894.433983,962.073593 L1042.92641,1110.56602 L1000.5,1152.99242 L852.007576,1004.5 L894.433983,962.073593 Z M1847.49513,960.606602 L1995.98755,1109.09903 L1953.56115,1151.52543 L1805.06872,1003.03301 L1847.49513,960.606602 Z M2001.09903,1018.13474 L2043.52543,1060.56115 L2001.09903,1102.98755 L1958.67262,1060.56115 L2001.09903,1018.13474 Z M629.26894,1015.1066 L671.695347,1057.53301 L629.26894,1099.95942 L586.842533,1057.53301 L629.26894,1015.1066 Z M1212.63203,856.007576 L1255.05844,898.433983 L1053.53301,1099.95942 L1011.1066,1057.53301 L1212.63203,856.007576 Z M1583.86309,1015.1066 L1626.2895,1057.53301 L1583.86309,1099.95942 L1541.43669,1057.53301 L1583.86309,1015.1066 Z M417.136906,1015.1066 L459.563312,1057.53301 L417.136906,1099.95942 L374.710499,1057.53301 L417.136906,1015.1066 Z M1530.83009,962.073593 L1573.25649,1004.5 L1477.79708,1099.95942 L1435.37067,1057.53301 L1530.83009,962.073593 Z M1318.69805,856.007576 L1361.12446,898.433983 L1159.59903,1099.95942 L1117.17262,1057.53301 L1318.69805,856.007576 Z M1366.42776,1009.8033 L1408.85417,1052.22971 L1366.42776,1094.65611 L1324.00135,1052.22971 L1366.42776,1009.8033 Z M2054.13203,965.101731 L2096.55844,1007.52814 L2054.13203,1049.95454 L2011.70563,1007.52814 L2054.13203,965.101731 Z M258.303045,962.338758 L300.729452,1004.76517 L258.303045,1047.19157 L215.876638,1004.76517 L258.303045,962.338758 Z M1424.76407,962.073593 L1467.19048,1004.5 L1424.76407,1046.92641 L1382.33766,1004.5 L1424.76407,962.073593 Z M947.466991,909.040585 L1042.92641,1004.5 L1000.5,1046.92641 L905.040585,951.466991 L947.466991,909.040585 Z M682.301948,856.007576 L724.728355,898.433983 L576.235931,1046.92641 L533.809524,1004.5 L682.301948,856.007576 Z M788.367966,962.073593 L830.794373,1004.5 L788.367966,1046.92641 L745.941559,1004.5 L788.367966,962.073593 Z M469.904749,961.808428 L512.331156,1004.23483 L469.904749,1046.66124 L427.478342,1004.23483 L469.904749,961.808428 Z M1896.56602,807.469696 L1938.99242,849.896103 L1790.5,998.388527 L1748.07359,955.96212 L1896.56602,807.469696 Z M1895.29817,912.333887 L1937.72458,954.760294 L1895.29817,997.186701 L1852.87177,954.760294 L1895.29817,912.333887 Z M735.334957,909.040585 L777.761364,951.466991 L735.334957,993.893398 L692.90855,951.466991 L735.334957,909.040585 Z M788.367966,856.007576 L883.827381,951.466991 L841.400974,993.893398 L745.941559,898.433983 L788.367966,856.007576 Z M417.136906,909.040585 L459.563312,951.466991 L417.136906,993.893398 L374.710499,951.466991 L417.136906,909.040585 Z M1371.73106,909.040585 L1414.15747,951.466991 L1371.73106,993.893398 L1329.30465,951.466991 L1371.73106,909.040585 Z M522.937758,908.775419 L565.364165,951.201826 L522.937758,993.628233 L480.511351,951.201826 L522.937758,908.775419 Z M311.561146,801.464825 L353.987553,843.891232 L205.495129,992.383656 L163.068722,949.957249 L311.561146,801.464825 Z M1737.46699,860.502705 L1779.8934,902.929112 L1737.46699,945.355519 L1695.04058,902.929112 L1737.46699,860.502705 Z M2054.13203,859.035713 L2096.55844,901.46212 L2054.13203,943.888527 L2011.70563,901.46212 L2054.13203,859.035713 Z M470.169914,856.007576 L512.861486,898.699148 L470.435079,941.125555 L427.743507,898.433983 L470.169914,856.007576 Z M1053.53301,802.974567 L1095.95942,845.400974 L1000.5,940.86039 L958.073593,898.433983 L1053.53301,802.974567 Z M364.103897,856.007576 L406.530304,898.433983 L364.103897,940.86039 L321.67749,898.433983 L364.103897,856.007576 Z M1530.83009,749.941559 L1573.25649,792.367966 L1424.76407,940.86039 L1382.33766,898.433983 L1530.83009,749.941559 Z M576.235931,856.007576 L618.662338,898.433983 L576.235931,940.86039 L533.809524,898.433983 L576.235931,856.007576 Z M1000.5,749.941559 L1042.92641,792.367966 L894.433983,940.86039 L852.007576,898.433983 L1000.5,749.941559 Z M1212.63203,749.941559 L1255.05844,792.367966 L1106.56602,940.86039 L1064.13961,898.433983 L1212.63203,749.941559 Z M152.46212,854.497834 L194.888527,896.92424 L152.46212,939.350647 L110.035713,896.92424 L152.46212,854.497834 Z M1843.53301,754.436688 L1885.95942,796.863094 L1790.5,892.32251 L1748.07359,849.896103 L1843.53301,754.436688 Z M1790.5,701.403679 L1832.92641,743.830086 L1684.43398,892.32251 L1642.00758,849.896103 L1790.5,701.403679 Z M2001.09903,806.002705 L2043.52543,848.429112 L2001.09903,890.855519 L1958.67262,848.429112 L2001.09903,806.002705 Z M523.468088,803.239732 L565.894495,845.666139 L523.468088,888.092546 L481.041681,845.666139 L523.468088,803.239732 Z M629.26894,696.90855 L777.761364,845.400974 L735.334957,887.827381 L586.842533,739.334957 L629.26894,696.90855 Z M417.136906,802.974567 L459.563312,845.400974 L417.136906,887.827381 L374.710499,845.400974 L417.136906,802.974567 Z M841.400974,802.974567 L883.827381,845.400974 L841.400974,887.827381 L798.974567,845.400974 L841.400974,802.974567 Z M205.495129,695.398808 L247.921536,737.825215 L99.4291117,886.317639 L57.0027048,843.891232 L205.495129,695.398808 Z M258.528137,748.431816 L300.954544,790.858223 L205.495129,886.317639 L163.068722,843.891232 L258.528137,748.431816 Z M2054.13203,752.969696 L2096.55844,795.396103 L2054.13203,837.82251 L2011.70563,795.396103 L2054.13203,752.969696 Z M470.435079,750.206724 L512.861486,792.633131 L470.435079,835.059538 L428.008672,792.633131 L470.435079,750.206724 Z M1106.56602,749.941559 L1148.99242,792.367966 L1106.56602,834.794373 L1064.13961,792.367966 L1106.56602,749.941559 Z M894.433983,643.875542 L936.86039,686.301948 L788.367966,834.794373 L745.941559,792.367966 L894.433983,643.875542 Z M947.466991,696.90855 L989.893398,739.334957 L894.433983,834.794373 L852.007576,792.367966 L947.466991,696.90855 Z M1371.73106,696.90855 L1414.15747,739.334957 L1318.69805,834.794373 L1276.27164,792.367966 L1371.73106,696.90855 Z M1737.46699,648.37067 L1779.8934,690.797077 L1684.43398,786.256493 L1642.00758,743.830086 L1737.46699,648.37067 Z M1737.46699,542.304653 L1779.8934,584.73106 L1578.36797,786.256493 L1535.94156,743.830086 L1737.46699,542.304653 Z M1265.66504,696.90855 L1308.09145,739.334957 L1265.66504,781.761364 L1223.23864,739.334957 L1265.66504,696.90855 Z M1212.63203,643.875542 L1255.05844,686.301948 L1159.59903,781.761364 L1117.17262,739.334957 L1212.63203,643.875542 Z M735.334957,696.90855 L777.761364,739.334957 L735.334957,781.761364 L692.90855,739.334957 L735.334957,696.90855 Z M152.46212,536.299782 L194.888527,578.726189 L-6.63690552,780.251622 L-49.0633124,737.825215 L152.46212,536.299782 Z M152.46212,642.365799 L194.888527,684.792206 L99.4291117,780.251622 L57.0027048,737.825215 L152.46212,642.365799 Z M2002.63203,595.337662 L2045.05844,637.764069 L1949.59903,733.223484 L1907.17262,690.797077 L2002.63203,595.337662 Z M1949.59903,542.304653 L1992.02543,584.73106 L1843.53301,733.223484 L1801.1066,690.797077 L1949.59903,542.304653 Z M1366.23593,489.271645 L1567.76136,690.797077 L1525.33496,733.223484 L1323.80952,531.698052 L1366.23593,489.271645 Z M576.235931,643.875542 L618.662338,686.301948 L576.235931,728.728355 L533.809524,686.301948 L576.235931,643.875542 Z M841.400974,590.842533 L883.827381,633.26894 L788.367966,728.728355 L745.941559,686.301948 L841.400974,590.842533 Z M841.400974,484.776516 L883.827381,527.202923 L682.301948,728.728355 L639.875542,686.301948 L841.400974,484.776516 Z M1106.56602,643.875542 L1148.99242,686.301948 L1106.56602,728.728355 L1064.13961,686.301948 L1106.56602,643.875542 Z M576.726189,536.299782 L619.152596,578.726189 L470.660172,727.218613 L428.233765,684.792206 L576.726189,536.299782 Z M364.594155,536.299782 L407.020561,578.726189 L258.528137,727.218613 L216.101731,684.792206 L364.594155,536.299782 Z M417.627163,589.332791 L460.05357,631.759198 L364.594155,727.218613 L322.167748,684.792206 L417.627163,589.332791 Z M1737.46699,436.238636 L1779.8934,478.665043 L1578.36797,680.190476 L1535.94156,637.764069 L1737.46699,436.238636 Z M1106.56602,537.809524 L1148.99242,580.235931 L1053.53301,675.695347 L1011.1066,633.26894 L1106.56602,537.809524 Z M629.26894,590.842533 L671.695347,633.26894 L629.26894,675.695347 L586.842533,633.26894 L629.26894,590.842533 Z M1371.73106,590.842533 L1414.15747,633.26894 L1371.73106,675.695347 L1329.30465,633.26894 L1371.73106,590.842533 Z M1053.53301,484.776516 L1095.95942,527.202923 L947.466991,675.695347 L905.040585,633.26894 L1053.53301,484.776516 Z M152.46212,430.233765 L194.888527,472.660172 L-6.63690552,674.185604 L-49.0633124,631.759198 L152.46212,430.233765 Z M1270.96834,479.473215 L1313.39475,521.899622 L1164.90233,670.392046 L1122.47592,627.965639 L1270.96834,479.473215 Z M1472.30195,489.271645 L1567.76136,584.73106 L1525.33496,627.157467 L1429.87554,531.698052 L1472.30195,489.271645 Z M1848.83631,537.001352 L1891.26272,579.427759 L1848.83631,621.854166 L1806.4099,579.427759 L1848.83631,537.001352 Z M263.831438,530.996481 L306.257845,573.422888 L263.831438,615.849295 L221.405031,573.422888 L263.831438,530.996481 Z M1896.56602,383.205627 L1938.99242,425.632034 L1790.5,574.124458 L1748.07359,531.698052 L1896.56602,383.205627 Z M2002.63203,489.271645 L2045.05844,531.698052 L2002.63203,574.124458 L1960.20563,531.698052 L2002.63203,489.271645 Z M2055.66504,330.172619 L2098.09145,372.599026 L1896.56602,574.124458 L1854.13961,531.698052 L2055.66504,330.172619 Z M947.466991,484.776516 L989.893398,527.202923 L947.466991,569.62933 L905.040585,527.202923 L947.466991,484.776516 Z M1106.56602,431.743507 L1202.02543,527.202923 L1159.59903,569.62933 L1064.13961,474.169914 L1106.56602,431.743507 Z M417.627163,483.266773 L460.05357,525.69318 L417.627163,568.119587 L375.200756,525.69318 L417.627163,483.266773 Z M470.660172,324.167748 L513.086579,366.594155 L311.561146,568.119587 L269.134739,525.69318 L470.660172,324.167748 Z M311.561146,377.200756 L353.987553,419.627163 L205.495129,568.119587 L163.068722,525.69318 L311.561146,377.200756 Z M1313.20292,436.238636 L1355.62933,478.665043 L1313.20292,521.09145 L1270.77652,478.665043 L1313.20292,436.238636 Z M1313.20292,330.172619 L1461.69535,478.665043 L1419.26894,521.09145 L1270.77652,372.599026 L1313.20292,330.172619 Z M1159.59903,378.710499 L1255.05844,474.169914 L1212.63203,516.596321 L1117.17262,421.136906 L1159.59903,378.710499 Z M788.367966,431.743507 L830.794373,474.169914 L788.367966,516.596321 L745.941559,474.169914 L788.367966,431.743507 Z M576.726189,430.233765 L619.152596,472.660172 L576.726189,515.086579 L534.299782,472.660172 L576.726189,430.233765 Z M682.792206,430.233765 L725.218613,472.660172 L682.792206,515.086579 L640.365799,472.660172 L682.792206,430.233765 Z M629.759198,271.134739 L672.185604,313.561146 L470.660172,515.086579 L428.233765,472.660172 L629.759198,271.134739 Z M1684.43398,383.205627 L1726.86039,425.632034 L1684.43398,468.058441 L1642.00758,425.632034 L1684.43398,383.205627 Z M1260.16991,383.205627 L1302.59632,425.632034 L1260.16991,468.058441 L1217.74351,425.632034 L1260.16991,383.205627 Z M1684.16882,276.874445 L1726.59522,319.300852 L1578.1028,467.793276 L1535.67639,425.366869 L1684.16882,276.874445 Z M841.400974,378.710499 L883.827381,421.136906 L841.400974,463.563312 L798.974567,421.136906 L841.400974,378.710499 Z M735.825215,377.200756 L778.251622,419.627163 L735.825215,462.05357 L693.398808,419.627163 L735.825215,377.200756 Z M735.825215,271.134739 L778.251622,313.561146 L629.759198,462.05357 L587.332791,419.627163 L735.825215,271.134739 Z M99.4291117,377.200756 L141.855519,419.627163 L99.4291117,462.05357 L57.0027048,419.627163 L99.4291117,377.200756 Z M99.1639466,270.869574 L141.590353,313.295981 L-6.90207056,461.788405 L-49.3284774,419.361998 L99.1639466,270.869574 Z M1578.36797,277.13961 L1620.79437,319.566017 L1525.33496,415.025433 L1482.90855,372.599026 L1578.36797,277.13961 Z M2002.63203,277.13961 L2045.05844,319.566017 L1949.59903,415.025433 L1907.17262,372.599026 L2002.63203,277.13961 Z M1525.33496,224.106602 L1567.76136,266.533009 L1419.26894,415.025433 L1376.84253,372.599026 L1525.33496,224.106602 Z M1000.5,219.611473 L1148.99242,368.103897 L1106.56602,410.530304 L958.073593,262.03788 L1000.5,219.611473 Z M788.858223,324.167748 L831.28463,366.594155 L788.858223,409.020561 L746.431816,366.594155 L788.858223,324.167748 Z M417.627163,271.134739 L460.05357,313.561146 L364.594155,409.020561 L322.167748,366.594155 L417.627163,271.134739 Z M1684.43398,171.073593 L1832.92641,319.566017 L1790.5,361.992424 L1642.00758,213.5 L1684.43398,171.073593 Z M1260.16991,277.13961 L1302.59632,319.566017 L1260.16991,361.992424 L1217.74351,319.566017 L1260.16991,277.13961 Z M1154.1039,277.13961 L1196.5303,319.566017 L1154.1039,361.992424 L1111.67749,319.566017 L1154.1039,277.13961 Z M1896.56602,277.13961 L1938.99242,319.566017 L1896.56602,361.992424 L1854.13961,319.566017 L1896.56602,277.13961 Z M99.4291117,165.068722 L247.921536,313.561146 L205.495129,355.987553 L57.0027048,207.495129 L99.4291117,165.068722 Z M894.92424,218.101731 L937.350647,260.528137 L841.891232,355.987553 L799.464825,313.561146 L894.92424,218.101731 Z M311.561146,271.134739 L353.987553,313.561146 L311.561146,355.987553 L269.134739,313.561146 L311.561146,271.134739 Z M1419.26894,224.106602 L1461.69535,266.533009 L1419.26894,308.959415 L1376.84253,266.533009 L1419.26894,224.106602 Z M1207.13691,224.106602 L1249.56331,266.533009 L1207.13691,308.959415 L1164.7105,266.533009 L1207.13691,224.106602 Z M2002.63203,65.007576 L2045.05844,107.433983 L1843.53301,308.959415 L1801.1066,266.533009 L2002.63203,65.007576 Z M788.858223,218.101731 L831.28463,260.528137 L788.858223,302.954544 L746.431816,260.528137 L788.858223,218.101731 Z M417.627163,59.0027048 L460.05357,101.429112 L258.528137,302.954544 L216.101731,260.528137 L417.627163,59.0027048 Z M735.825215,165.068722 L778.251622,207.495129 L682.792206,302.954544 L640.365799,260.528137 L735.825215,165.068722 Z M523.69318,59.0027048 L566.119587,101.429112 L364.594155,302.954544 L322.167748,260.528137 L523.69318,59.0027048 Z M571.422888,212.79843 L613.849295,255.224837 L571.422888,297.651243 L528.996481,255.224837 L571.422888,212.79843 Z M1048.30304,171.338758 L1090.72945,213.765165 L1048.30304,256.191572 L1005.87664,213.765165 L1048.30304,171.338758 Z M1472.30195,65.007576 L1514.72836,107.433983 L1366.23593,255.926407 L1323.80952,213.5 L1472.30195,65.007576 Z M1578.36797,171.073593 L1620.79437,213.5 L1578.36797,255.926407 L1535.94156,213.5 L1578.36797,171.073593 Z M1737.46699,118.040585 L1832.92641,213.5 L1790.5,255.926407 L1695.04058,160.466991 L1737.46699,118.040585 Z M1259.90475,170.808428 L1302.33116,213.234835 L1259.90475,255.661242 L1217.47834,213.234835 L1259.90475,170.808428 Z M-6.63690552,165.068722 L35.7895014,207.495129 L-6.63690552,249.921536 L-49.0633124,207.495129 L-6.63690552,165.068722 Z M152.46212,112.035713 L247.921536,207.495129 L205.495129,249.921536 L110.035713,154.46212 L152.46212,112.035713 Z M629.759198,165.068722 L672.185604,207.495129 L629.759198,249.921536 L587.332791,207.495129 L629.759198,165.068722 Z M1525.33496,118.040585 L1567.76136,160.466991 L1525.33496,202.893398 L1482.90855,160.466991 L1525.33496,118.040585 Z M1578.36797,65.007576 L1673.82738,160.466991 L1631.40097,202.893398 L1535.94156,107.433983 L1578.36797,65.007576 Z M1207.13691,118.040585 L1249.56331,160.466991 L1207.13691,202.893398 L1164.7105,160.466991 L1207.13691,118.040585 Z M1312.93776,117.775419 L1355.36416,160.201826 L1312.93776,202.628233 L1270.51135,160.201826 L1312.93776,117.775419 Z M1101.56115,10.464825 L1143.98755,52.8912319 L995.495129,201.383656 L953.068722,158.957249 L1101.56115,10.464825 Z M-6.63690552,59.0027048 L88.8225099,154.46212 L46.3961031,196.888527 L-49.0633124,101.429112 L-6.63690552,59.0027048 Z M576.726189,112.035713 L619.152596,154.46212 L576.726189,196.888527 L534.299782,154.46212 L576.726189,112.035713 Z M1260.16991,65.007576 L1302.86149,107.699148 L1260.43508,150.125555 L1217.74351,107.433983 L1260.16991,65.007576 Z M1790.5,-41.0584412 L1832.92641,1.36796564 L1684.43398,149.86039 L1642.00758,107.433983 L1790.5,-41.0584412 Z M1366.23593,65.007576 L1408.66234,107.433983 L1366.23593,149.86039 L1323.80952,107.433983 L1366.23593,65.007576 Z M1843.53301,11.9745674 L1885.95942,54.4009742 L1790.5,149.86039 L1748.07359,107.433983 L1843.53301,11.9745674 Z M1154.1039,65.007576 L1196.5303,107.433983 L1154.1039,149.86039 L1111.67749,107.433983 L1154.1039,65.007576 Z M2002.63203,-41.0584412 L2045.05844,1.36796564 L1896.56602,149.86039 L1854.13961,107.433983 L2002.63203,-41.0584412 Z M942.46212,63.4978336 L984.888527,105.92424 L942.46212,148.350647 L900.035713,105.92424 L942.46212,63.4978336 Z M205.495129,-47.0633124 L247.921536,-4.63690552 L99.4291117,143.855519 L57.0027048,101.429112 L205.495129,-47.0633124 Z M258.528137,5.9696962 L300.954544,48.3961031 L205.495129,143.855519 L163.068722,101.429112 L258.528137,5.9696962 Z M735.825215,-47.0633124 L778.251622,-4.63690552 L629.759198,143.855519 L587.332791,101.429112 L735.825215,-47.0633124 Z M417.627163,-47.0633124 L460.05357,-4.63690552 L311.561146,143.855519 L269.134739,101.429112 L417.627163,-47.0633124 Z M1313.46809,12.2397324 L1355.89449,54.6661393 L1313.46809,97.0925461 L1271.04168,54.6661393 L1313.46809,12.2397324 Z M1631.40097,11.9745674 L1673.82738,54.4009742 L1631.40097,96.8273811 L1588.97457,54.4009742 L1631.40097,11.9745674 Z M1207.13691,11.9745674 L1249.56331,54.4009742 L1207.13691,96.8273811 L1164.7105,54.4009742 L1207.13691,11.9745674 Z M1048.52814,-42.5681836 L1090.95454,-0.141776686 L995.495129,95.3176388 L953.068722,52.8912319 L1048.52814,-42.5681836 Z M46.3961031,5.9696962 L88.8225099,48.3961031 L46.3961031,90.8225099 L3.9696962,48.3961031 L46.3961031,5.9696962 Z M1260.43508,-40.7932762 L1302.86149,1.63313069 L1260.43508,44.0595376 L1218.00867,1.63313069 L1260.43508,-40.7932762 Z M1896.56602,-41.0584412 L1938.99242,1.36796564 L1896.56602,43.7943725 L1854.13961,1.36796564 L1896.56602,-41.0584412 Z M311.561146,-47.0633124 L353.987553,-4.63690552 L311.561146,37.7895014 L269.134739,-4.63690552 L311.561146,-47.0633124 Z\" id=\"Combined-Shape\" fill=\"#EDEDED\"></path>\n                </g>\n                \n\n            <path d=\"M1000.5,1039 C1009.5,1027.88161 1014,1019.91226 1014,1015.09194 C1014,1007.86146 1007.95584,1002 1000.5,1002 C993.044156,1002 987,1007.86146 987,1015.09194 C987,1019.91226 991.5,1027.88161 1000.5,1039 Z\" ref=\"oval\" id=\"Oval\"></path>\n\n            </svg>\n            <!-- <div \n                v-on:click=\"controlsClick\" \n                class=\"marker\"\n                ref=\"marker\"\n            ></div> -->\n        </div>\n    </div>\n      \n    </div>\n</template>\n\n<script>\n\nimport * as panzoom from 'panzoom';\n\nexport default {\n  name: 'Map',\n  props: {\n    offset: Number,\n    actions: Number,\n    width: Number,\n    height: Number,\n    contentActive: Boolean\n  },\n  data: function () {\n    return {\n      panzoomInstance: null,\n      isAnimatingMap: false\n    }\n  },\n  watch: {\n    contentActive: function (oldBoolean, newBoolean) {\n        if (this.isElementInViewport(this.$refs.oval)) {\n            setTimeout(() => {\n                this.isAnimatingMap = true;\n                // Simulate map delayed update animation\n                if (newBoolean === true) {\n                    this.moveToInactive();\n                } else {\n                    this.moveToActive();\n                }\n                setTimeout(() => {\n                    this.isAnimatingMap = false;\n                }, 600)\n            }, 1000);\n        }\n    }\n  },\n  mounted() {\n    this.panzoomInstance = panzoom(this.$refs.panmap, {\n        maxZoom: 2,\n        minZoom: 0.25\n        });\n  },\n    methods: {\n    moveBy(x, y) {\n        this.panzoomInstance.moveBy(x, y);\n    },\n    moveTo(x, y) {\n        this.panzoomInstance.moveTo(x, y);\n    },\n    zoom(x, y, scale) {\n        this.panzoomInstance.zoomAbs(x, y, scale);\n    },\n    moveToActiveInitial(width, height, offset, actions) {\n        console.log('MAP: move to active initial');\n        let x = -1000 + width/2;\n        let y = -1000 + height - 192 + 48;\n        this.zoom(x, y, 1);\n        this.moveTo(x, y);\n    },\n    moveToActive() {\n        let x = -1000 + this.width/2;\n        let y = -1000 + this.height - 192 + 48;\n\n        this.zoom(x, y, 1);\n        this.moveTo(x, y);\n\n        console.log('MAP: move to active');\n    },\n    moveToInactive() {\n        let x = -1000 + this.width/2;\n        let y = -1000 + this.height/2;\n\n        this.zoom(x, y, 1);\n        this.moveTo(x, y);\n\n        console.log('MAP: move to inactive');\n    },\n    isElementInViewport(el) {\n        var rect = el.getBoundingClientRect();\n\n        return (\n            rect.top >= 0 &&\n            rect.left >= 0 &&\n            rect.bottom <= (window.innerHeight) &&\n            rect.right <= (window.innerWidth)\n        );\n    }\n   },\n}\n\n</script>\n\n<style>\n\n  .map {\n    background-color: #d7d7d7;\n    position: absolute;\n    overflow: hidden;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n\n  .map-tiles-inner {\n    position: relative;\n    width: 2000px;\n    height: 2000px;\n  }\n\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Map.vue?vue&type=template&id=5edd4ba8&\"\nimport script from \"./Map.vue?vue&type=script&lang=js&\"\nexport * from \"./Map.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Map.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('svg',{attrs:{\"height\":\"30\",\"viewBox\":\"0 0 40 30\",\"width\":\"40\",\"xmlns\":\"http://www.w3.org/2000/svg\"}},[_c('path',{attrs:{\"d\":'m5 ' + _vm.startY + ' 15 ' + _vm.centreY + ' 15 ' + _vm.endY,\"fill\":\"none\",\"stroke\":\"#d7d7d7\",\"stroke-linecap\":\"round\",\"stroke-linejoin\":\"round\",\"stroke-width\":\"3\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n          <div>\n              <svg height=\"30\" viewBox=\"0 0 40 30\" width=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path \n                v-bind:d=\"'m5 ' + startY + ' 15 ' + centreY + ' 15 ' + endY\" \n                fill=\"none\" \n                stroke=\"#d7d7d7\" \n                stroke-linecap=\"round\" \n                stroke-linejoin=\"round\" \n                stroke-width=\"3\"\n              />\n              </svg>\n          </div>\n</template>\n\n<script>\n// const downPositions = {\n//     startYdown: 12,\n//     centreYdown: 6,\n//     endYdown: -6\n// }\n\n// const upPositions = {\n//     startYup: 18,\n//     centreYup: -6,\n//     endYup: 6\n// }\nconst startYdown = 12;\nconst centreYdown = 6;\nconst endYdown = -6;\n\nconst startYup = 18;\nconst centreYup = -6;\nconst endYup = 6;\n\nconst duration = 1500;\n\nexport default {    \n  name: 'ArrowToggle',\n  props: {\n    down: Boolean,\n  },\n  data: function () {\n    return {\n        startY: 14,\n        centreY: 0,\n        endY: 0,\n        startTime: null\n    }\n  },\n  watch: {\n    down: function (boolean) {    \n        this.toggle(boolean);\n    },\n  },\n  mounted: function() {\n      this.toggle(this.down);\n  },\n  methods: {\n    toggle(boolean) {\n        if (boolean) {\n            // down true, content active\n            this.startAnimation(startYdown, centreYdown, endYdown);\n            console.log('inactive - active');\n        } else {\n            // down false (up), content inactive\n            this.startAnimation(startYup, centreYup, endYup);\n            console.log('active - inactive');\n        }\n    },\n    startAnimation(targetStartY, targetCentreY, targetEndY) {\n        this.startTime = performance.now();\n        window.requestAnimationFrame(\n            () => { this.update(targetStartY, targetCentreY, targetEndY) }\n        );\n    },\n    update(targetStartY, targetCentreY, targetEndY) {\n\n        let timeSinceStart = (performance.now() - this.startTime);\n\n        let l = Math.min(timeSinceStart / duration, 1);\n\n        // it lerps the lerped values - but looks ok :)\n        this.startY = this.lerp(this.startY, targetStartY, l);\n        this.centreY = this.lerp(this.centreY, targetCentreY, l);\n        this.endY = this.lerp(this.endY, targetEndY, l);\n\n        if (l < 0.95) {\n            window.requestAnimationFrame(\n                () => { this.update(targetStartY, targetCentreY, targetEndY) }\n            );\n        }\n    },\n    lerp(v0, v1, t) {\n        // cosine easing\n        let t2 = (1-Math.cos(t*Math.PI))/2;\n        return(v0*(1-t2)+v1*t2);\n    },\n  }\n  }\n\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ArrowToggle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ArrowToggle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ArrowToggle.vue?vue&type=template&id=1b5b49b4&\"\nimport script from \"./ArrowToggle.vue?vue&type=script&lang=js&\"\nexport * from \"./ArrowToggle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div \n    ref=\"outer\"\n    class=\"outer\"\n    v-on:scroll.native=\"handleScrollOuter\"\n    v-bind:style=\"{ 'scroll-behavior': initialised ? 'smooth' : 'auto' }\"\n    >\n\n    <Map \n      ref=\"map\"\n      v-bind:offset=\"screenOffset\"\n      v-bind:actions=\"actionsHeight\"\n      v-bind:width=\"width\"\n      v-bind:height=\"height\"\n      v-bind:contentActive=\"contentActive\"\n    />\n\n    <div\n      class=\"actions-spacer spacer\"\n      v-bind:class=\"{ snap: initialised }\"\n      v-bind:style=\"{ height: actionsHeight + 'px', top: height + 'px' }\"\n    ></div>\n\n    <div \n      class=\"content\"\n      v-bind:style=\"{ top: screenOffset + actionsHeight + 'px' }\"\n      ref=\"content\"\n    >\n      \n        <div \n          v-on:click=\"toggleContentActive\"\n          class=\"content-toggle elevation2-reversed\"\n          >\n        <ArrowToggle\n          v-bind:down=\"contentActive\"\n        />\n        </div>\n\n        <div \n          class=\"content-actions\"\n          ref=\"actions\"\n        >\n          <div class=\"directions-title\">\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"directions-action\"></div>\n        </div>\n\n      <div class=\"content-inner\">\n        <div class=\"content-group\">\n        <div v-for=\"n in 6\" class=\"content-line\">\n          <div></div>\n          <div>{{n}}</div>\n          <div v-bind:style=\"{ height: (2 % n)*50 + 'px', display: 4 % n === 0 ? 'none' : 'flex' }\"></div>\n        </div>\n      </div>\n      </div>\n      <div class=\"content-footer\"></div>\n\n    </div>\n      \n  </div>\n</template>\n\n<script>\nimport Map from './Map.vue'\nimport ArrowToggle from './ArrowToggle.vue'\n\nexport default {\n  name: 'Scroller',\n  components: {\n    Map,\n    ArrowToggle\n  },\n  data: function () {\n    return {\n      width: 0,\n      height: 0,\n      initialised: false,\n      contentActive: true,\n      fullScreen: false,\n      screenOffset: 0,\n      actionsHeight: 0,\n      scrollNumber: 0,\n      activeScrollPosition: null,\n    }\n  },\n  mounted() {\n    this.width = this.$refs.outer.offsetWidth;\n    this.height = this.$refs.outer.offsetHeight;\n\n    console.log('width: ', this.width);\n    console.log('height: ', this.height);\n\n    this.getOffset();\n    this.activeScrollPosition = (this.screenOffset + this.actionsHeight) - (198 + 48);\n\n    this.$nextTick(() => {\n    // Operate after dom updates with dynamic values - since scroll position depends on it\n    this.$refs.outer.addEventListener('scroll', this.handleScrollOuter);\n\n    console.log('scroll to: ', this.activeScrollPosition);\n    this.$refs.outer.scrollTo( 0 , this.activeScrollPosition );\n\n    // Finish initialisation\n    this.$refs.map.moveToActiveInitial(this.width, this.height, this.screenOffset, this.actionsHeight);\n    this.initialised = true;\n\n    });\n  },\n  methods: {\n    handleScrollOuter() {\n\n      this.scrollNumber = this.$refs.outer.scrollTop;\n\n      this.$emit('scroll', this.scrollNumber);\n\n      if (this.scrollNumber >= this.actionsHeight + this.screenOffset - 48) {\n        // swap to full screen condition\n        this.fullScreen = true;\n        this.$emit('fullscreen', this.fullScreen);\n      } else {\n        // swap to normal condition\n        this.fullScreen = false;\n        this.$emit('fullscreen', this.fullScreen);\n      }\n\n      if (this.scrollNumber == 0) {\n        this.contentActive = false;\n      }\n      // This feels jarring actually\n      // else if (this.scrollNumber > this.screenOffset) {\n      //   this.contentActive = true;\n      // }\n    },\n    getOffset() {\n        let actionsRect = this.$refs.actions.getBoundingClientRect();\n\n        // Update to relative to parent\n        let parentRect = this.$refs.outer.getBoundingClientRect();\n        let relativeBottom = actionsRect.bottom - parentRect.top;\n        let relativeTop = actionsRect.top - parentRect.top;\n\n        let heightActions = relativeBottom - relativeTop;\n        let distanceToElementBottom = this.height - relativeBottom;\n\n        console.log('actions height: ', heightActions);\n        console.log('offset: ', distanceToElementBottom);\n\n        this.screenOffset = distanceToElementBottom;\n        this.actionsHeight = heightActions;\n\n        // TODO re-get offset on window height change\n    },\n    toggleContentActive() {\n      if (this.contentActive) {\n        console.log('scroll to: ', 0);\n        this.$refs.outer.scrollTo( 0 , 0 );\n        this.contentActive = false;\n      } else {\n        console.log('scroll to: ', this.activeScrollPosition);\n        this.$refs.outer.scrollTo( 0 , this.activeScrollPosition );\n        this.contentActive = true;\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n  body {\n    overflow: hidden;\n  }\n\n  .outer {\n    overflow: scroll;\n    scroll-snap-type: y proximity;\n    -webkit-overflow-scrolling: touch;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  .fixed-outer {\n    overflow: hidden;\n  }\n\n  .map {\n    scroll-snap-align: end;\n  }\n\n  .spacer {\n    pointer-events: none;\n    position: absolute;\n    width: 100%;\n  }\n\n  .snap {\n    scroll-snap-align: end;\n  }\n\n  .content {\n    position: absolute;\n    width: 100%;\n    pointer-events: all;\n    transition: transform 0.3s ease;\n    background-color: #fff;\n    z-index: 2;\n  }\n\n\n\n\n  .content-actions {\n    padding: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid #ededed;\n  }\n\n  .directions-title {\n    flex-grow: 1;\n  }\n\n  .directions-action {\n    flex-grow: 0;\n    height: 70px;\n    width: 70px;\n    align-self: flex-end;\n    background-color: #ededed;\n    margin-left: 40px;\n  }\n\n  .directions-title div {\n    height: 16px;\n    background-color: #ededed;\n  }\n\n  .directions-title div:not(:last-child) {\n      margin-bottom: 5px\n  }\n\n  .directions-title div:last-child {\n      width: 80%;\n  }\n\n  .directions-title div:first-child {\n    height: 36px;\n    background-color: #ededed;\n    width: 200px;\n    margin-bottom: 10px\n  }\n\n  .content-toggle {\n    height: 30px;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n  }\n\n\n\n\n\n\n  .elevation1 {\n    box-shadow: 0 1px 3px 0 rgba(0,0,0,.15),0 0 2px 0 rgba(0,0,0,.15);\n    background-color: #fff;\n    border-radius: 0px 0px 3px 3px;\n  }\n\n  .elevation2 {\n    box-shadow: 0 2px 5px 0 rgba(74, 74, 74, 0.2);\n    background-color: #fff;\n    border-radius: 0px 0px 3px 3px;\n  }\n\n  .elevation2-reversed {\n    box-shadow: 0 -1px 2px 0 rgba(74, 74, 74, 0.1);\n    border-radius: 6px 6px 0px 0px;\n    background-color: #fff;\n  }\n\n  .content-inner {\n    padding: 20px;\n    padding-top: 10px;\n  }\n\n  .content-line {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    padding-bottom: 20px;\n  }\n\n  .content-line div {\n    flex-grow: 1;\n    height: 15px;\n    color: #ededed;\n    background-color: #ededed;\n    margin-top: 20px;\n  }\n\n  .content-line div:first-child {\n    flex-grow:0;\n    width: 15px;\n    margin-right: 15px;\n  }\n\n  .content-line div:last-child {\n    width: 100%;\n    margin-left: 30px;\n  }\n\n  .content-footer {\n    width: 100%;\n    height: 45px;\n    background-color: #ededed;\n  }\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scroller.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scroller.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Scroller.vue?vue&type=template&id=a5e6cc5c&\"\nimport script from \"./Scroller.vue?vue&type=script&lang=js&\"\nexport * from \"./Scroller.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Scroller.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <div \n      class=\"header\"\n      v-bind:class=\"{ 'header-fullscreen': fullScreen }\"\n    >\n      <div class=\"header-content\"></div>\n      <p>{{scrollNumber}}</p>\n    </div>\n\n    <div \n    class=\"map-viewport\"\n    >\n        <div v-on:click.capture=\"controlsClick\" class=\"controls\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n    </div>\n\n    <Scroller\n        v-on:scroll=\"scrollNumber = $event\"\n        v-on:fullscreen=\"fullScreen = $event\"\n    />\n  </div>\n</template>\n\n<script>\nimport Scroller from './components/Scroller.vue'\n\nexport default {\n  name: 'app',\n  components: {\n    Scroller\n  },\n  data: function () {\n    return {\n        scrollNumber: 0,\n        fullScreen: false,\n    }\n  },\n  methods: {\n      controlsClick() {\n        console.log('controls');\n    },\n  }\n}\n</script>\n\n<style>\n\nbody {\n    background: #2e2e2e;\n}\n\n\n#app {\n  font-family: Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2e2e2e;\n\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    bottom: 0;\n    max-width: 420px;\n    max-height: 830px;\n    overflow: hidden;\n}\n\n@media screen and (min-width: 421px) {\n    #app {\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n    }\n}\n\n/*\nApp reset by Ben Frain @benfrain / benfrain.com\nLatest: https://github.com/benfrain/app-reset\nAn opinionated set of resets suitable for building web applications.\n## Accessibility Notes\nThese resets target HTML elements that typically receive styling defaults by User Agents that I always need to 'undo'.\nBe aware that some of these resets have a negative impact on the default usability and accessibility of a web page. Therefore, ensure you add an equivalent accessible style back that matches your project aesthetic.\n## You'll want to run this through Autoprefixer You'll typically need to run this through (https://github.com/postcss/autoprefixer) for production. Only essential prefixes are added here (e.g. proprietary property value/pairs) and you'll need to set prefixing relative to your desired browser support matrix.\n*/\n\n/*Hat tip to @thierrykoblentz for this approach: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */\nhtml {\n    box-sizing: border-box;\n\t/* Nicer looking fonts for OS X and iOS */\n\t-webkit-font-smoothing: antialiased; \n}\n\n/*Yes, the universal selector. No, it isn't slow: https://benfrain.com/css-performance-revisited-selectors-bloat-expensive-styles/*/\n* {\n    /* Later browsers can be more easily reset with `all: unset`. It's commented out by default here as it's pretty heavy handed. However, further declarations on these elements follow for older browsers. If you uncomment this property/value REMEMBER accessibility for outlines etc. This undoes a LOT of default UA styling, use with EXTREME caution!! */\n    /* all: unset; */\n    /*This prevents users being able to select text. Stops long presses in iOS bringing up copy/paste UI for example. Note below we specifically switch user-select on for inputs for the sake of Safari. Bug here: https://bugs.webkit.org/show_bug.cgi?id=82692*/\n    user-select: none;\n    /*This gets -webkit specific prefix as it is a non W3C property*/\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\n    /*Older Androids need this instead*/\n    -webkit-tap-highlight-color: transparent;\n    /* Most devs find border-box easier to reason about. However by inheriting we can mix box-sizing approaches.*/\n    box-sizing: inherit;\n}\n\n*:before,\n*:after {\n    box-sizing: inherit;\n}\n\n/* Switching user-select on for inputs and contenteditable specifically for Safari (see bug link above)*/\ninput[type],\n[contenteditable] {\n\tuser-select: text;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n    /*We will be adding our own margin to these elements as needed.*/\n    margin: 0;\n    /*You'll want to set font-size as needed.*/\n    font-size: 1rem;\n    /*No bold for h tags unless you want it*/\n    font-weight: 400;\n}\n\n/* \nThanks to L. David Baron for this:\nhttps://twitter.com/davidbaron/status/794138427952222210 */\nbase, basefont, datalist, head, meta, script, style, title,\nnoembed, param, template {\n    display: none;\n}\n\na {\n    text-decoration: none;\n    color: inherit;\n}\n\n/*No bold for b tags by default*/\nb {\n    font-weight: 400;\n}\n\n/*Prevent these elements having italics by default*/\nem,\ni {\n    font-style: normal;\n}\n\n/*IMPORTANT: This removes the focus outline for most browsers. Be aware this is a backwards accessibilty step! Mozilla (i.e. Firefox) also adds a dotted outline around a tags and buttons when they receive tab focus which I haven't found an unhacky way of removing.*/\na:focus,\nbutton:focus {\n    outline: 0;\n}\n\n/* The button element tends to get a lot of default styles which we largely undo here. We set text-alignment (usually set to center by UA style sheet) and the font-family to inherit from your own styles instead. */\nbutton {\n    appearance: none;\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n    text-align: inherit;\n    font-family: inherit;\n}\n\ninput,\nfieldset {\n    appearance: none;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    /*inputs and fieldset defaults to having a min-width equal to its content in Chrome and Firefox (https://code.google.com/p/chromium/issues/detail?id=560762), we may not want that*/\n    min-width: 0;\n    /*Reset the font size and family*/\n    font-size: 1rem;\n    font-family: inherit;\n}\n\n/* For IE, we want to remove the default cross ('X') that appears in input fields when a user starts typing - Make sure you add your own! */\ninput::-ms-clear {\n    display: none;\n}\n\n/*This switches the default outline off when an input receives focus (really important for users tabbing through with a keyboard) so ensure you put something decent in for your input focus instead!!*/\ninput:focus {\n    outline: 0;\n}\n\ninput[type=\"number\"] {\n    /*Mozilla shows the spinner UI on number inputs unless we use this:*/\n    -moz-appearance: textfield;\n}\n\n/*Removes the little spinner controls for number type inputs (WebKit browsers/forks only)*/\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n    appearance: none;\n}\n\n/*SVG defaults to display: inline which I dislike. Inline-block or inline-flex will render white space on SVG elements in HTML (where you would have defs and symbols) if the container isn't a flex box or the font-size set to 0 to crush the whitespace */\nsvg {\n    display: block;\n}\n\nimg {\n    /*Make images behave responsively. Here they will scale up to 100% of their natural size*/\n    max-width: 100%;\n    /*Make images display as a block (UA default is usually inline)*/\n    display: block;\n}\n\n/*Removes the default focusring that Mozilla places on select items. From: http://stackoverflow.com/a/18853002/1147859 \nEnsure you set `#000` to the colour you want your text to appear */\nselect:-moz-focusring {\n    color: transparent;\n    text-shadow: 0 0 0 #000;\n}\n\n/* Switching on box-sizing: border-box by default; toggle this off if you want more granular control */\nbody {\n\tbox-sizing: border-box;\n}\n\n\n\n\n\n  .header {\n    height: 48px;\n    padding: 0px 20px;\n    position: absolute;\n    width: 100%;\n    z-index: 2;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    box-shadow: 0 2px 5px 0 rgba(74, 74, 74, 0.2);\n    background-color: #fff;\n    z-index: 3;\n  }\n\n  .header-fullscreen {\n    box-shadow: 0 0px 1px 0px rgba(74, 74, 74, 0.2);\n    border-radius: 0px;\n  }\n\n  .header-content {\n    background-color: #ededed;\n    height: 20px;\n    width: 140px;\n  }\n\n\n\n  .map-viewport {\n    position: absolute;\n    top: 48px;\n    height: 198px;\n    left: 0;\n    right: 0;\n    pointer-events: none;\n  }\n\n  .marker {\n    position: absolute;\n    width: 15px;\n    height: 30px;\n    background-color: #9b9b9b;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .controls {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    pointer-events: all;\n    z-index: 1;\n  }\n\n  .controls div {\n    width: 30px;\n    height: 30px;\n    background-color: #9b9b9b;\n    margin-bottom: 5px;\n    border-radius: 50%;\n  }\n\n  .controls div:nth-child(2) {\n    margin-bottom: 15px;\n  }\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=b4254ca4&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scroller.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scroller.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}